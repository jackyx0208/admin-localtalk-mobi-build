{"version":3,"sources":["utils/formatNumber.js","components/charts/BaseOptionChart.js","components/_dashboard/general-app/AppCurrentDownload.js","components/carousel/controls/CarouselControlsPaging1.js","components/carousel/controls/CarouselControlsPaging2.js","components/carousel/controls/CarouselControlsArrowsBasic1.js","components/carousel/controls/CarouselControlsArrowsBasic2.js","components/carousel/controls/CarouselControlsArrowsIndex.js","components/carousel/CarouselAnimation.js","components/carousel/CarouselBasic1.js","components/carousel/CarouselBasic2.js","components/carousel/CarouselBasic3.js","components/carousel/CarouselBasic4.js","components/carousel/CarouselCenterMode.js","components/carousel/CarouselThumbnail.js","components/_dashboard/general-app/AppFeatured.js","components/_dashboard/general-app/AppNewInvoice.js","components/_dashboard/general-app/AppTopAuthors.js","components/_dashboard/general-app/AppTopInstalledCountries.js","components/_dashboard/general-app/AppTopRelated.js","components/_dashboard/general-app/AppTotalActiveUsers.js","components/_dashboard/general-app/AppTotalRegisterUsers.js","components/_dashboard/general-app/AppTotalOnlineVisitors.js","components/_dashboard/general-app/AppTotalDownloads.js","components/_dashboard/general-app/AppTotalInstalled.js","components/_dashboard/general-app/AppTotalChart.js","components/_dashboard/general-app/AppWelcome.js","components/_dashboard/general-app/AppWidgets1.js","components/_dashboard/general-app/AppWidgets2.js","pages/dashboard/GeneralApp.js"],"names":["fCurrency","number","numeral","format","Number","isInteger","fNumber","fShortenNumber","replace","fData","useStyles","makeStyles","theme","createStyles","border","boxShadow","customShadows","z24","color","palette","text","primary","borderRadius","shape","borderRadiusSm","backgroundColor","background","default","fontWeight","typography","fontWeightBold","grey","mode","borderBottomColor","paper","padding","alignItems","display","marginTop","marginRight","lineHeight","textTransform","BaseOptionChart","useTheme","LABEL_TOTAL","show","label","secondary","subtitle2","LABEL_VALUE","offsetY","h3","colors","main","chart","yellow","blue","violet","green","red","toolbar","zoom","enabled","foreColor","disabled","fontFamily","states","hover","filter","type","value","active","fill","opacity","gradient","shadeIntensity","opacityFrom","opacityTo","stops","dataLabels","stroke","width","curve","lineCap","grid","strokeDashArray","borderColor","divider","xaxis","axisBorder","axisTicks","markers","size","strokeColors","tooltip","x","legend","fontSize","position","horizontalAlign","radius","itemMargin","horizontal","labels","plotOptions","bar","columnWidth","pie","donut","total","radialBar","track","strokeWidth","radar","polygons","connectorColors","polarArea","rings","strokeColor","spokes","responsive","breakpoint","breakpoints","values","sm","options","md","styled","height","spacing","overflow","alignContent","borderTop","top","CHART_HEIGHT","listStyle","right","bottom","cursor","justifyContent","transition","transitions","create","easing","easeInOut","duration","Box","zIndex","MIconButton","common","white","margin","alpha","Array","map","_","index","id","mockData","title","image","feed","description","objectFit","z16","borderRadiusMd","borderBottomLeftRadius","backdropFilter","WebkitBackdropFilter","borderBottomRightRadius","flexDirection","direction","left","content","backgroundImage","up","transform","THUMB_SIZE","root","float","TITLES","price","category","status","name","fullName","avatar","favourite","random","country","android","windows","apple","flag","props","Stack","minWidth","flex","Icon","appName","system","rating","review","shortcut","noCase","success","PropTypes","CHART_DATA","data","AppTotalRegisterUsers","totalUsers","chartOptions","info","sparkline","y","formatter","seriesName","marker","Card","sx","p","flexGrow","Typography","variant","series","prototype","AppTotalOnlineVisitors","any","AppTotalChart","chartDate","useState","seriesData","dateCount","chartData","setChartData","useEffect","a","toDateObj","Date","fromDateObj","getTime","fromDate","moment","toDate","axios","get","error","zeroValueArr","i","push","logs","onlineUserArr","registerUserArr","lastDateLimit","length","logDate","date","console","log","Math","floor","online_user_num","register_user_num","getAnalytics","merge","categories","num","datesCollection","newDate","dateFromatStr","unshift","daysList","CardHeader","subheader","item","mt","mx","dir","textAlign","lighter","darker","warning","GeneralApp","themeStretch","useSettings","React","totalRegisteredUsers","setTotalRegisteredUsers","totalOnlineVisitors","setTotalOnlineVisitors","selectedDate","setSelectedDate","useAuth","user","Page","Container","maxWidth","pb","Grid","container","xs","TextField","InputLabelProps","shrink","required","onChange","e","target","defaultValue","lg"],"mappings":"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","file":"static/js/28.52632d37.chunk.js","sourcesContent":["import { replace } from 'lodash';\r\nimport numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fCurrency(number) {\r\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  return numeral(number / 100).format('0.0%');\r\n}\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  return replace(numeral(number).format('0.00a'), '.00', '');\r\n}\r\n\r\nexport function fData(number) {\r\n  return numeral(number).format('0.0 b');\r\n}\r\n","// material\r\nimport { createStyles, makeStyles } from '@material-ui/styles';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    '@global': {\r\n      // Tooltip\r\n      '.apexcharts-tooltip,.apexcharts-xaxistooltip': {\r\n        border: '0 !important',\r\n        boxShadow: `${theme.customShadows.z24} !important`,\r\n        color: `${theme.palette.text.primary} !important`,\r\n        borderRadius: `${theme.shape.borderRadiusSm}px !important`,\r\n        backgroundColor: `${theme.palette.background.default} !important`\r\n      },\r\n      '.apexcharts-tooltip-title': {\r\n        border: '0 !important',\r\n        fontWeight: theme.typography.fontWeightBold,\r\n        backgroundColor: `${theme.palette.grey[500_16]} !important`,\r\n        color: theme.palette.text[theme.palette.mode === 'light' ? 'secondary' : 'primary']\r\n      },\r\n      '.apexcharts-xaxistooltip-bottom': {\r\n        '&:before': {\r\n          borderBottomColor: 'transparent !important'\r\n        },\r\n        '&:after': {\r\n          borderBottomColor: `${theme.palette.background.paper} !important`\r\n        }\r\n      },\r\n\r\n      // Legend\r\n      '.apexcharts-legend': {\r\n        padding: '0 !important'\r\n      },\r\n      '.apexcharts-legend-series': {\r\n        alignItems: 'center',\r\n        display: 'flex !important'\r\n      },\r\n      '.apexcharts-legend-marker': {\r\n        marginTop: '-2px !important',\r\n        marginRight: '8px !important'\r\n      },\r\n      '.apexcharts-legend-text': {\r\n        lineHeight: '18px',\r\n        textTransform: 'capitalize'\r\n      }\r\n    }\r\n  })\r\n);\r\n\r\nexport default function BaseOptionChart() {\r\n  useStyles();\r\n  const theme = useTheme();\r\n\r\n  const LABEL_TOTAL = {\r\n    show: true,\r\n    label: 'Total',\r\n    color: theme.palette.text.secondary,\r\n    ...theme.typography.subtitle2\r\n  };\r\n\r\n  const LABEL_VALUE = {\r\n    offsetY: 8,\r\n    color: theme.palette.text.primary,\r\n    ...theme.typography.h3\r\n  };\r\n\r\n  return {\r\n    // Colors\r\n    colors: [\r\n      theme.palette.primary.main,\r\n      theme.palette.chart.yellow[0],\r\n      theme.palette.chart.blue[0],\r\n      theme.palette.chart.violet[0],\r\n      theme.palette.chart.green[0],\r\n      theme.palette.chart.red[0]\r\n    ],\r\n\r\n    // Chart\r\n    chart: {\r\n      toolbar: { show: false },\r\n      zoom: { enabled: false },\r\n      // animations: { enabled: false },\r\n      foreColor: theme.palette.text.disabled,\r\n      fontFamily: theme.typography.fontFamily\r\n    },\r\n\r\n    // States\r\n    states: {\r\n      hover: {\r\n        filter: {\r\n          type: 'lighten',\r\n          value: 0.04\r\n        }\r\n      },\r\n      active: {\r\n        filter: {\r\n          type: 'darken',\r\n          value: 0.88\r\n        }\r\n      }\r\n    },\r\n\r\n    // Fill\r\n    fill: {\r\n      opacity: 1,\r\n      gradient: {\r\n        type: 'vertical',\r\n        shadeIntensity: 0,\r\n        opacityFrom: 0.4,\r\n        opacityTo: 0,\r\n        stops: [0, 100]\r\n      }\r\n    },\r\n\r\n    // Datalabels\r\n    dataLabels: { enabled: false },\r\n\r\n    // Stroke\r\n    stroke: {\r\n      width: 3,\r\n      curve: 'smooth',\r\n      lineCap: 'round'\r\n    },\r\n\r\n    // Grid\r\n    grid: {\r\n      strokeDashArray: 3,\r\n      borderColor: theme.palette.divider\r\n    },\r\n\r\n    // Xaxis\r\n    xaxis: {\r\n      axisBorder: { show: false },\r\n      axisTicks: { show: false }\r\n    },\r\n\r\n    // Markers\r\n    markers: {\r\n      size: 0,\r\n      strokeColors: theme.palette.background.paper\r\n    },\r\n\r\n    // Tooltip\r\n    tooltip: {\r\n      x: {\r\n        show: false\r\n      }\r\n    },\r\n\r\n    // Legend\r\n    legend: {\r\n      show: true,\r\n      fontSize: 13,\r\n      position: 'top',\r\n      horizontalAlign: 'right',\r\n      markers: {\r\n        radius: 12\r\n      },\r\n      fontWeight: 500,\r\n      itemMargin: { horizontal: 12 },\r\n      labels: {\r\n        colors: theme.palette.text.primary\r\n      }\r\n    },\r\n\r\n    // plotOptions\r\n    plotOptions: {\r\n      // Bar\r\n      bar: {\r\n        columnWidth: '28%',\r\n        borderRadius: 4\r\n      },\r\n      // Pie + Donut\r\n      pie: {\r\n        donut: {\r\n          labels: {\r\n            show: true,\r\n            value: LABEL_VALUE,\r\n            total: LABEL_TOTAL\r\n          }\r\n        }\r\n      },\r\n      // Radialbar\r\n      radialBar: {\r\n        track: {\r\n          strokeWidth: '100%',\r\n          background: theme.palette.grey[500_16]\r\n        },\r\n        dataLabels: {\r\n          value: LABEL_VALUE,\r\n          total: LABEL_TOTAL\r\n        }\r\n      },\r\n      // Radar\r\n      radar: {\r\n        polygons: {\r\n          fill: { colors: ['transparent'] },\r\n          strokeColors: theme.palette.divider,\r\n          connectorColors: theme.palette.divider\r\n        }\r\n      },\r\n      // polarArea\r\n      polarArea: {\r\n        rings: {\r\n          strokeColor: theme.palette.divider\r\n        },\r\n        spokes: {\r\n          connectorColors: theme.palette.divider\r\n        }\r\n      }\r\n    },\r\n\r\n    // Responsive\r\n    responsive: [\r\n      {\r\n        // sm\r\n        breakpoint: theme.breakpoints.values.sm,\r\n        options: {\r\n          plotOptions: { bar: { columnWidth: '40%' } }\r\n        }\r\n      },\r\n      {\r\n        // md\r\n        breakpoint: theme.breakpoints.values.md,\r\n        options: {\r\n          plotOptions: { bar: { columnWidth: '32%' } }\r\n        }\r\n      }\r\n    ]\r\n  };\r\n}\r\n","import { merge } from 'lodash';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Card, CardHeader } from '@material-ui/core';\r\n// utils\r\nimport { fNumber } from '../../../utils/formatNumber';\r\n//\r\nimport { BaseOptionChart } from '../../charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_HEIGHT = 392;\r\nconst LEGEND_HEIGHT = 72;\r\n\r\nconst ChartWrapperStyle = styled('div')(({ theme }) => ({\r\n  height: CHART_HEIGHT,\r\n  marginTop: theme.spacing(5),\r\n  '& .apexcharts-canvas svg': { height: CHART_HEIGHT },\r\n  '& .apexcharts-canvas svg,.apexcharts-canvas foreignObject': {\r\n    overflow: 'visible'\r\n  },\r\n  '& .apexcharts-legend': {\r\n    height: LEGEND_HEIGHT,\r\n    alignContent: 'center',\r\n    position: 'relative !important',\r\n    borderTop: `solid 1px ${theme.palette.divider}`,\r\n    top: `calc(${CHART_HEIGHT - LEGEND_HEIGHT}px) !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [12244, 53345, 44313, 78343];\r\n\r\nexport default function AppCurrentDownload() {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    colors: [\r\n      theme.palette.primary.lighter,\r\n      theme.palette.primary.light,\r\n      theme.palette.primary.main,\r\n      theme.palette.primary.dark\r\n    ],\r\n    labels: ['Mac', 'Window', 'iOS', 'Android'],\r\n    stroke: { colors: [theme.palette.background.paper] },\r\n    legend: { floating: true, horizontalAlign: 'center' },\r\n    tooltip: {\r\n      fillSeriesColor: false,\r\n      y: {\r\n        formatter: (seriesName) => fNumber(seriesName),\r\n        title: {\r\n          formatter: (seriesName) => `${seriesName}`\r\n        }\r\n      }\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        donut: {\r\n          size: '90%',\r\n          labels: {\r\n            value: {\r\n              formatter: (val) => fNumber(val)\r\n            },\r\n            total: {\r\n              formatter: (w) => {\r\n                const sum = w.globals.seriesTotals.reduce((a, b) => a + b, 0);\r\n                return fNumber(sum);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Current Download\" />\r\n      <ChartWrapperStyle dir=\"ltr\">\r\n        <ReactApexChart type=\"donut\" series={CHART_DATA} options={chartOptions} height={280} />\r\n      </ChartWrapperStyle>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('ul')(({ theme }) => ({\r\n  display: 'flex',\r\n  listStyle: 'none',\r\n  alignItems: 'center',\r\n  position: 'absolute',\r\n  right: theme.spacing(3),\r\n  bottom: theme.spacing(3),\r\n  '& li': {\r\n    width: 18,\r\n    height: 18,\r\n    opacity: 0.32,\r\n    cursor: 'pointer',\r\n    '&.slick-active': { opacity: 1 }\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselControlsPaging1.propTypes = {\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default function CarouselControlsPaging1({ color, ...other }) {\r\n  return {\r\n    appendDots: (dots) => (\r\n      <>\r\n        <RootStyle {...other}>{dots}</RootStyle>\r\n      </>\r\n    ),\r\n    customPaging: () => (\r\n      <Box\r\n        sx={{\r\n          width: 1,\r\n          height: 1,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <Box\r\n          component=\"span\"\r\n          sx={{\r\n            width: 8,\r\n            height: 8,\r\n            borderRadius: '50%',\r\n            bgcolor: color || 'common.white'\r\n          }}\r\n        />\r\n      </Box>\r\n    )\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('ul')({\r\n  display: 'flex',\r\n  listStyle: 'none',\r\n  justifyContent: 'center',\r\n  '& li': {\r\n    width: 24,\r\n    height: 24,\r\n    opacity: 0.32,\r\n    cursor: 'pointer',\r\n    '&.slick-active': {\r\n      opacity: 1,\r\n      '& .dotActive': {\r\n        width: 18,\r\n        borderRadius: 8\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst DotStyle = styled('span')(({ theme }) => ({\r\n  width: 8,\r\n  height: 8,\r\n  borderRadius: '50%',\r\n  transition: theme.transitions.create('all', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: 360\r\n  })\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselControlsPaging2.propTypes = {\r\n  color: PropTypes.string\r\n};\r\n\r\nexport default function CarouselControlsPaging2({ color, ...other }) {\r\n  return {\r\n    appendDots: (dots) => (\r\n      <>\r\n        <RootStyle {...other}>{dots}</RootStyle>\r\n      </>\r\n    ),\r\n    customPaging: () => (\r\n      <Box\r\n        sx={{\r\n          width: '100%',\r\n          height: '100%',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n        }}\r\n      >\r\n        <DotStyle\r\n          className=\"dotActive\"\r\n          sx={{\r\n            bgcolor: color || 'primary.main'\r\n          }}\r\n        />\r\n      </Box>\r\n    )\r\n  };\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\r\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\r\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\r\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON_SIZE = {\r\n  width: 20,\r\n  height: 20\r\n};\r\n\r\nconst RootStyle = styled(Box)(({ theme }) => ({\r\n  zIndex: 9,\r\n  display: 'flex',\r\n  position: 'absolute',\r\n  top: theme.spacing(2),\r\n  right: theme.spacing(2)\r\n}));\r\n\r\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\r\n  padding: 6,\r\n  opacity: 0.48,\r\n  color: theme.palette.common.white,\r\n  '&:hover': { opacity: 1 }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselControlsArrowsBasic1.propTypes = {\r\n  arrowLine: PropTypes.bool,\r\n  onNext: PropTypes.func,\r\n  onPrevious: PropTypes.func\r\n};\r\n\r\nexport default function CarouselControlsArrowsBasic1({ arrowLine, onNext, onPrevious, ...other }) {\r\n  const theme = useTheme();\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n\r\n      <ArrowStyle size=\"small\" onClick={onNext}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n\r\nimport { Icon } from '@iconify/react';\r\nimport arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\r\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\r\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\r\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst SIZE = 40;\r\n\r\nconst ICON_SIZE = {\r\n  width: 20,\r\n  height: 20\r\n};\r\n\r\nconst RootStyle = styled(Box)(({ theme }) => ({\r\n  top: 0,\r\n  bottom: 0,\r\n  zIndex: 9,\r\n  height: SIZE,\r\n  width: '100%',\r\n  margin: 'auto',\r\n  display: 'flex',\r\n  position: 'absolute',\r\n  padding: theme.spacing(0, 2),\r\n  justifyContent: 'space-between'\r\n}));\r\n\r\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\r\n  width: SIZE,\r\n  height: SIZE,\r\n  opacity: 0.48,\r\n  display: 'flex',\r\n  cursor: 'pointer',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.common.white,\r\n  background: theme.palette.grey[900],\r\n  borderRadius: theme.shape.borderRadiusSm,\r\n  transition: theme.transitions.create('opacity'),\r\n  '&:hover': {\r\n    opacity: 1,\r\n    background: theme.palette.grey[900]\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselControlsArrowsBasic2.propTypes = {\r\n  arrowLine: PropTypes.bool,\r\n  onNext: PropTypes.func,\r\n  onPrevious: PropTypes.func\r\n};\r\n\r\nexport default function CarouselControlsArrowsBasic2({ arrowLine, onNext, onPrevious, ...other }) {\r\n  const theme = useTheme();\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n\r\n      <ArrowStyle size=\"small\" onClick={onNext}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport arrowLeftFill from '@iconify/icons-eva/arrow-left-fill';\r\nimport arrowRightFill from '@iconify/icons-eva/arrow-right-fill';\r\nimport roundKeyboardArrowLeft from '@iconify/icons-ic/round-keyboard-arrow-left';\r\nimport roundKeyboardArrowRight from '@iconify/icons-ic/round-keyboard-arrow-right';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Typography, Box } from '@material-ui/core';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst ICON_SIZE = {\r\n  width: 20,\r\n  height: 20\r\n};\r\n\r\nconst RootStyle = styled(Box)(({ theme }) => ({\r\n  zIndex: 9,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  position: 'absolute',\r\n  bottom: theme.spacing(2),\r\n  right: theme.spacing(2),\r\n  color: theme.palette.common.white,\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: alpha(theme.palette.grey[900], 0.48)\r\n}));\r\n\r\nconst ArrowStyle = styled(MIconButton)(({ theme }) => ({\r\n  padding: 6,\r\n  opacity: 0.48,\r\n  color: theme.palette.common.white,\r\n  '&:hover': { opacity: 1 }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselControlsArrowsIndex.propTypes = {\r\n  index: PropTypes.number,\r\n  total: PropTypes.number,\r\n  arrowLine: PropTypes.bool,\r\n  onNext: PropTypes.func,\r\n  onPrevious: PropTypes.func\r\n};\r\n\r\nexport default function CarouselControlsArrowsIndex({ arrowLine, index, total, onNext, onPrevious, ...other }) {\r\n  const theme = useTheme();\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <ArrowStyle size=\"small\" onClick={onPrevious}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowRight : roundKeyboardArrowLeft} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowRightFill : arrowLeftFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n\r\n      <Typography variant=\"subtitle2\">\r\n        {index + 1}/{total}\r\n      </Typography>\r\n\r\n      <ArrowStyle size=\"small\" onClick={onNext}>\r\n        {arrowLine ? (\r\n          <Icon icon={isRTL ? roundKeyboardArrowLeft : roundKeyboardArrowRight} {...ICON_SIZE} />\r\n        ) : (\r\n          <Icon icon={isRTL ? arrowLeftFill : arrowRightFill} {...ICON_SIZE} />\r\n        )}\r\n      </ArrowStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\nimport { useState, useRef } from 'react';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Paper, Button, Typography, CardContent } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { varFadeInRight, MotionContainer } from '../animate';\r\nimport { CarouselControlsArrowsIndex } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nconst CarouselImgStyle = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute'\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object,\r\n  isActive: PropTypes.bool\r\n};\r\n\r\nfunction CarouselItem({ item, isActive }) {\r\n  const theme = useTheme();\r\n  const { image, title } = item;\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        position: 'relative',\r\n        paddingTop: { xs: '100%', md: '50%' }\r\n      }}\r\n    >\r\n      <CarouselImgStyle alt={title} src={image} />\r\n      <Box\r\n        sx={{\r\n          top: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          position: 'absolute',\r\n          backgroundImage: `linear-gradient(to top, ${theme.palette.grey[900]} 0%,${alpha(\r\n            theme.palette.grey[900],\r\n            0\r\n          )} 100%)`\r\n        }}\r\n      />\r\n      <CardContent\r\n        sx={{\r\n          bottom: 0,\r\n          width: '100%',\r\n          maxWidth: 480,\r\n          textAlign: 'left',\r\n          position: 'absolute',\r\n          color: 'common.white'\r\n        }}\r\n      >\r\n        <MotionContainer open={isActive}>\r\n          <motion.div variants={varFadeInRight}>\r\n            <Typography variant=\"h3\" gutterBottom>\r\n              {item.title}\r\n            </Typography>\r\n          </motion.div>\r\n          <motion.div variants={varFadeInRight}>\r\n            <Typography variant=\"body2\" noWrap gutterBottom>\r\n              {item.description}\r\n            </Typography>\r\n          </motion.div>\r\n          <motion.div variants={varFadeInRight}>\r\n            <Button variant=\"contained\" sx={{ mt: 3 }}>\r\n              View More\r\n            </Button>\r\n          </motion.div>\r\n        </MotionContainer>\r\n      </CardContent>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default function CarouselAnimation() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n  const [currentIndex, setCurrentIndex] = useState(theme.direction === 'rtl' ? MOCK_CAROUSELS.length - 1 : 0);\r\n\r\n  const settings = {\r\n    speed: 800,\r\n    dots: false,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    beforeChange: (current, next) => setCurrentIndex(next)\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item, index) => (\r\n          <CarouselItem key={item.title} item={item} isActive={index === currentIndex} />\r\n        ))}\r\n      </Slider>\r\n\r\n      <CarouselControlsArrowsIndex\r\n        index={currentIndex}\r\n        total={MOCK_CAROUSELS.length}\r\n        onNext={handleNext}\r\n        onPrevious={handlePrevious}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useRef } from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Box, Card } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsIndex } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 480, objectFit: 'cover' }} />;\r\n}\r\n\r\nexport default function CarouselBasic1() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n  const [currentIndex, setCurrentIndex] = useState(theme.direction === 'rtl' ? MOCK_CAROUSELS.length - 1 : 0);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    beforeChange: (current, next) => setCurrentIndex(next)\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n\r\n      <CarouselControlsArrowsIndex\r\n        index={currentIndex}\r\n        total={MOCK_CAROUSELS.length}\r\n        onNext={handleNext}\r\n        onPrevious={handlePrevious}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useRef } from 'react';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, CardContent } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsIndex } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title, description } = item;\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 370, objectFit: 'cover' }} />\r\n\r\n      <CardContent sx={{ textAlign: 'left' }}>\r\n        <Typography variant=\"h6\" noWrap gutterBottom>\r\n          {title}\r\n        </Typography>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\r\n          {description}\r\n        </Typography>\r\n      </CardContent>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function CarouselBasic2() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n  const [currentIndex, setCurrentIndex] = useState(2);\r\n\r\n  const settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    initialSlide: currentIndex,\r\n    fade: Boolean(theme.direction !== 'rtl'),\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    beforeChange: (current, next) => setCurrentIndex(next)\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n\r\n      <CarouselControlsArrowsIndex\r\n        index={currentIndex}\r\n        total={MOCK_CAROUSELS.length}\r\n        onNext={handleNext}\r\n        onPrevious={handlePrevious}\r\n        sx={{ bottom: 120 }}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsPaging2, CarouselControlsArrowsBasic2 } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  position: 'relative',\r\n  '& .slick-list': {\r\n    boxShadow: theme.customShadows.z16,\r\n    borderRadius: theme.shape.borderRadiusMd\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 480, objectFit: 'cover' }} />;\r\n}\r\n\r\nexport default function CarouselBasic3() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n\r\n  const settings = {\r\n    dots: true,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    ...CarouselControlsPaging2({\r\n      sx: { mt: 3 }\r\n    })\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useRef } from 'react';\r\nimport { Icon } from '@iconify/react';\r\nimport moreHorizontalFill from '@iconify/icons-eva/more-horizontal-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsBasic2 } from './controls';\r\n//\r\nimport { MIconButton } from '../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nconst ContentItemStyle = styled('div')(({ theme }) => ({\r\n  bottom: 0,\r\n  zIndex: 9,\r\n  width: '100%',\r\n  display: 'flex',\r\n  position: 'absolute',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(3),\r\n  borderBottomLeftRadius: 16,\r\n  backdropFilter: 'blur(8px)',\r\n  WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\r\n  borderBottomRightRadius: 16,\r\n  justifyContent: 'space-between',\r\n  backgroundColor: alpha(theme.palette.grey[900], 0.72),\r\n  flexDirection: theme.direction === 'rtl' ? 'row-reverse' : 'row'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return (\r\n    <Box sx={{ position: 'relative', zIndex: 0 }}>\r\n      <Box component=\"img\" alt={title} src={image} sx={{ width: '100%', height: 480, objectFit: 'cover' }} />\r\n\r\n      <ContentItemStyle>\r\n        <Typography variant=\"h6\" sx={{ color: 'common.white' }}>\r\n          {item.title}\r\n        </Typography>\r\n        <MIconButton\r\n          onClick={() => {}}\r\n          sx={{\r\n            color: 'common.white',\r\n            '&:hover': {\r\n              bgcolor: (theme) => alpha(theme.palette.common.white, theme.palette.action.hoverOpacity)\r\n            }\r\n          }}\r\n        >\r\n          <Icon icon={moreHorizontalFill} />\r\n        </MIconButton>\r\n      </ContentItemStyle>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default function CarouselBasic4() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n\r\n  const settings = {\r\n    dots: false,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    fade: Boolean(theme.direction !== 'rtl'),\r\n    rtl: Boolean(theme.direction === 'rtl')\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\r\n    </Card>\r\n  );\r\n}\r\n","import { useRef } from 'react';\r\nimport Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport arrowForwardFill from '@iconify/icons-eva/arrow-forward-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Paper, Link, Typography, CardContent } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsBasic2 } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  overflow: 'hidden',\r\n  position: 'relative',\r\n  '&:before, &:after': {\r\n    top: 0,\r\n    left: 0,\r\n    zIndex: 8,\r\n    width: 48,\r\n    content: \"''\",\r\n    height: '100%',\r\n    display: 'none',\r\n    position: 'absolute',\r\n    backgroundImage: 'linear-gradient(to right, rgba(0,0,0,1) 0%, rgba(0,0,0,0) 100%)',\r\n    [theme.breakpoints.up(480)]: {\r\n      display: 'block'\r\n    }\r\n  },\r\n  '&:after': {\r\n    right: 0,\r\n    left: 'auto',\r\n    transform: 'scaleX(-1)'\r\n  }\r\n}));\r\n\r\nconst CarouselImgStyle = styled('img')(({ theme }) => ({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute',\r\n  transition: theme.transitions.create('all')\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction CarouselItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return (\r\n    <Paper\r\n      sx={{\r\n        mx: 1,\r\n        borderRadius: 2,\r\n        overflow: 'hidden',\r\n        paddingTop: 'calc(16 /9 * 100%)',\r\n        position: 'relative',\r\n        '&:hover img': {\r\n          width: '120%',\r\n          height: '120%'\r\n        }\r\n      }}\r\n    >\r\n      <CarouselImgStyle alt={title} src={image} />\r\n      <CardContent\r\n        sx={{\r\n          bottom: 0,\r\n          zIndex: 9,\r\n          width: '100%',\r\n          textAlign: 'left',\r\n          position: 'absolute',\r\n          color: 'common.white',\r\n          backgroundImage: (theme) =>\r\n            `linear-gradient(to top, ${theme.palette.grey[900]} 0%,${alpha(theme.palette.grey[900], 0)} 100%)`\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" paragraph>\r\n          {title}\r\n        </Typography>\r\n        <Link\r\n          to=\"#\"\r\n          color=\"inherit\"\r\n          variant=\"overline\"\r\n          component={RouterLink}\r\n          sx={{\r\n            opacity: 0.72,\r\n            alignItems: 'center',\r\n            display: 'inline-flex',\r\n            transition: (theme) => theme.transitions.create('opacity'),\r\n            '&:hover': { opacity: 1 }\r\n          }}\r\n        >\r\n          learn More\r\n          <Box component={Icon} icon={arrowForwardFill} sx={{ width: 16, height: 16, ml: 1 }} />\r\n        </Link>\r\n      </CardContent>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default function CarouselCenterMode() {\r\n  const carouselRef = useRef();\r\n  const theme = useTheme();\r\n\r\n  const settings = {\r\n    slidesToShow: 3,\r\n    centerMode: true,\r\n    centerPadding: '60px',\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    responsive: [\r\n      {\r\n        breakpoint: 1024,\r\n        settings: { slidesToShow: 2 }\r\n      },\r\n      {\r\n        breakpoint: 600,\r\n        settings: { slidesToShow: 2 }\r\n      },\r\n      {\r\n        breakpoint: 480,\r\n        settings: { slidesToShow: 1, centerPadding: '0' }\r\n      }\r\n    ]\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_CAROUSELS.map((item) => (\r\n          <CarouselItem key={item.title} item={item} />\r\n        ))}\r\n      </Slider>\r\n      <CarouselControlsArrowsBasic2 onNext={handleNext} onPrevious={handlePrevious} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { useState, useRef, useEffect } from 'react';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../utils/mock-data';\r\n//\r\nimport { CarouselControlsArrowsIndex } from './controls';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_CAROUSELS = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: mockData.text.title(index),\r\n  image: mockData.image.feed(index),\r\n  description: mockData.text.description(index)\r\n}));\r\n\r\nconst THUMB_SIZE = 64;\r\n\r\nconst RootStyle = styled('div')(({ theme }) => {\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  return {\r\n    root: {\r\n      '& .slick-slide': {\r\n        float: isRTL ? 'right' : 'left'\r\n      }\r\n    }\r\n  };\r\n});\r\n\r\nconst LargeImgStyle = styled('img')({\r\n  top: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  objectFit: 'cover',\r\n  position: 'absolute'\r\n});\r\n\r\nconst ThumbImgStyle = styled('img')(({ theme }) => ({\r\n  opacity: 0.48,\r\n  width: THUMB_SIZE,\r\n  cursor: 'pointer',\r\n  height: THUMB_SIZE,\r\n  margin: theme.spacing(0, 1),\r\n  borderRadius: theme.shape.borderRadiusSm,\r\n  '&:hover': {\r\n    opacity: 0.72,\r\n    transition: theme.transitions.create('opacity')\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLargeItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction LargeItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'relative',\r\n        paddingTop: {\r\n          xs: '100%',\r\n          md: '50%'\r\n        }\r\n      }}\r\n    >\r\n      <LargeImgStyle alt={title} src={image} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nThumbnailItem.propTypes = {\r\n  item: PropTypes.object\r\n};\r\n\r\nfunction ThumbnailItem({ item }) {\r\n  const { image, title } = item;\r\n\r\n  return <ThumbImgStyle alt={title} src={image} />;\r\n}\r\n\r\nexport default function CarouselThumbnail() {\r\n  const [currentIndex, setCurrentIndex] = useState(0);\r\n  const [nav1, setNav1] = useState(null);\r\n  const [nav2, setNav2] = useState(null);\r\n  const slider1 = useRef(null);\r\n  const slider2 = useRef(null);\r\n\r\n  const settings1 = {\r\n    dots: false,\r\n    arrows: false,\r\n    slidesToShow: 1,\r\n    draggable: false,\r\n    slidesToScroll: 1,\r\n    adaptiveHeight: true,\r\n    beforeChange: (current, next) => setCurrentIndex(next)\r\n  };\r\n\r\n  const settings2 = {\r\n    dots: false,\r\n    arrows: false,\r\n    centerMode: true,\r\n    swipeToSlide: true,\r\n    focusOnSelect: true,\r\n    variableWidth: true,\r\n    centerPadding: '0px',\r\n    slidesToShow: MOCK_CAROUSELS.length > 3 ? 3 : MOCK_CAROUSELS.length\r\n  };\r\n\r\n  useEffect(() => {\r\n    setNav1(slider1.current);\r\n    setNav2(slider2.current);\r\n  }, []);\r\n\r\n  const handlePrevious = () => {\r\n    slider2.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    slider2.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Box\r\n        sx={{\r\n          zIndex: 0,\r\n          borderRadius: 2,\r\n          overflow: 'hidden',\r\n          position: 'relative'\r\n        }}\r\n      >\r\n        <Slider {...settings1} asNavFor={nav2} ref={slider1}>\r\n          {MOCK_CAROUSELS.map((item) => (\r\n            <LargeItem key={item} item={item} />\r\n          ))}\r\n        </Slider>\r\n        <CarouselControlsArrowsIndex\r\n          index={currentIndex}\r\n          total={MOCK_CAROUSELS.length}\r\n          onNext={handleNext}\r\n          onPrevious={handlePrevious}\r\n        />\r\n      </Box>\r\n\r\n      <Box\r\n        sx={{\r\n          mt: 3,\r\n          mx: 'auto',\r\n          ...(MOCK_CAROUSELS.length === 1 && { maxWidth: THUMB_SIZE * 1 + 16 }),\r\n          ...(MOCK_CAROUSELS.length === 2 && { maxWidth: THUMB_SIZE * 2 + 32 }),\r\n          ...(MOCK_CAROUSELS.length === 3 && { maxWidth: THUMB_SIZE * 3 + 48 }),\r\n          ...(MOCK_CAROUSELS.length === 4 && { maxWidth: THUMB_SIZE * 3 + 48 }),\r\n          ...(MOCK_CAROUSELS.length === 5 && { maxWidth: THUMB_SIZE * 6 }),\r\n          '& .slick-current img': {\r\n            opacity: 1,\r\n            border: (theme) => `solid 3px ${theme.palette.primary.main}`\r\n          }\r\n        }}\r\n      >\r\n        <Slider {...settings2} asNavFor={nav1} ref={slider2}>\r\n          {MOCK_CAROUSELS.map((item) => (\r\n            <ThumbnailItem key={item} item={item} />\r\n          ))}\r\n        </Slider>\r\n      </Box>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import Slider from 'react-slick';\r\nimport PropTypes from 'prop-types';\r\nimport { motion } from 'framer-motion';\r\nimport { useState, useRef } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { CardContent, Box, Card, Typography } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../../utils/mock-data';\r\n//\r\nimport { varFadeInRight, MotionContainer } from '../../animate';\r\nimport { CarouselControlsPaging1, CarouselControlsArrowsBasic1 } from '../../carousel';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TITLES = ['Harry Potter and the Deathly Hallows - Part 2', 'Disney Zombies 2', 'Lightroom mobile - Koloro'];\r\n\r\nconst MOCK_APPS = [...Array(3)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  title: TITLES[index],\r\n  description: mockData.text.title(index),\r\n  image: mockData.image.feed(index)\r\n}));\r\n\r\nconst CarouselImgStyle = styled('img')(({ theme }) => ({\r\n  height: 280,\r\n  width: '100%',\r\n  objectFit: 'cover',\r\n  [theme.breakpoints.up('xl')]: {\r\n    height: 320\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCarouselItem.propTypes = {\r\n  item: PropTypes.object,\r\n  isActive: PropTypes.bool\r\n};\r\n\r\nfunction CarouselItem({ item, isActive }) {\r\n  const { image, title, description } = item;\r\n\r\n  return (\r\n    <RouterLink to=\"#\">\r\n      <Box sx={{ position: 'relative' }}>\r\n        <Box\r\n          sx={{\r\n            top: 0,\r\n            width: 1,\r\n            height: 1,\r\n            position: 'absolute',\r\n            bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72)\r\n          }}\r\n        />\r\n        <CarouselImgStyle alt={title} src={image} />\r\n        <CardContent\r\n          sx={{\r\n            bottom: 0,\r\n            width: 1,\r\n            textAlign: 'left',\r\n            position: 'absolute',\r\n            color: 'common.white'\r\n          }}\r\n        >\r\n          <MotionContainer open={isActive}>\r\n            <motion.div variants={varFadeInRight}>\r\n              <Typography\r\n                variant=\"overline\"\r\n                sx={{\r\n                  mb: 1,\r\n                  opacity: 0.48,\r\n                  display: 'block'\r\n                }}\r\n              >\r\n                Featured App\r\n              </Typography>\r\n            </motion.div>\r\n            <motion.div variants={varFadeInRight}>\r\n              <Typography variant=\"h5\" gutterBottom noWrap>\r\n                {title}\r\n              </Typography>\r\n            </motion.div>\r\n            <motion.div variants={varFadeInRight}>\r\n              <Typography variant=\"body2\" noWrap>\r\n                {description}\r\n              </Typography>\r\n            </motion.div>\r\n          </MotionContainer>\r\n        </CardContent>\r\n      </Box>\r\n    </RouterLink>\r\n  );\r\n}\r\n\r\nexport default function AppFeatured() {\r\n  const theme = useTheme();\r\n  const carouselRef = useRef();\r\n  const [currentIndex, setCurrentIndex] = useState(theme.direction === 'rtl' ? MOCK_APPS.length - 1 : 0);\r\n\r\n  const settings = {\r\n    speed: 800,\r\n    dots: true,\r\n    arrows: false,\r\n    autoplay: true,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n    rtl: Boolean(theme.direction === 'rtl'),\r\n    beforeChange: (current, next) => setCurrentIndex(next),\r\n    ...CarouselControlsPaging1({\r\n      color: 'primary.main',\r\n      sx: {\r\n        top: theme.spacing(3),\r\n        left: theme.spacing(3),\r\n        bottom: 'auto',\r\n        right: 'auto'\r\n      }\r\n    })\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    carouselRef.current.slickPrev();\r\n  };\r\n\r\n  const handleNext = () => {\r\n    carouselRef.current.slickNext();\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <Slider ref={carouselRef} {...settings}>\r\n        {MOCK_APPS.map((app, index) => (\r\n          <CarouselItem key={app.id} item={app} isActive={index === currentIndex} />\r\n        ))}\r\n      </Slider>\r\n\r\n      <CarouselControlsArrowsBasic1 onNext={handleNext} onPrevious={handlePrevious} />\r\n    </Card>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { useRef, useState } from 'react';\r\nimport { sentenceCase } from 'change-case';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport shareFill from '@iconify/icons-eva/share-fill';\r\nimport printerFill from '@iconify/icons-eva/printer-fill';\r\nimport archiveFill from '@iconify/icons-eva/archive-fill';\r\nimport downloadFill from '@iconify/icons-eva/download-fill';\r\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport {\r\n  Box,\r\n  Menu,\r\n  Card,\r\n  Table,\r\n  Button,\r\n  Divider,\r\n  MenuItem,\r\n  TableRow,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  Typography,\r\n  CardHeader,\r\n  TableContainer\r\n} from '@material-ui/core';\r\n// utils\r\nimport { fCurrency } from '../../../utils/formatNumber';\r\nimport mockData from '../../../utils/mock-data';\r\n//\r\nimport Label from '../../Label';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport { MIconButton } from '../../@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_INVOICES = [...Array(5)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  price: mockData.number.price(index),\r\n  category: (index === 0 && 'Android') || (index === 2 && 'Mac') || 'Windows',\r\n  status: (index === 0 && 'paid') || (index === 2 && 'out_of_date') || 'in_progress'\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction MoreMenuButton() {\r\n  const menuRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <>\r\n        <MIconButton ref={menuRef} size=\"large\" onClick={handleOpen}>\r\n          <Icon icon={moreVerticalFill} width={20} height={20} />\r\n        </MIconButton>\r\n      </>\r\n\r\n      <Menu\r\n        open={open}\r\n        anchorEl={menuRef.current}\r\n        onClose={handleClose}\r\n        PaperProps={{\r\n          sx: { width: 200, maxWidth: '100%' }\r\n        }}\r\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      >\r\n        <MenuItem>\r\n          <Icon icon={downloadFill} width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Download\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Icon icon={printerFill} width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Print\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Icon icon={shareFill} width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Share\r\n          </Typography>\r\n        </MenuItem>\r\n        <MenuItem>\r\n          <Icon icon={archiveFill} width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Archive\r\n          </Typography>\r\n        </MenuItem>\r\n\r\n        <Divider />\r\n        <MenuItem sx={{ color: 'error.main' }}>\r\n          <Icon icon={trash2Outline} width={20} height={20} />\r\n          <Typography variant=\"body2\" sx={{ ml: 2 }}>\r\n            Delete\r\n          </Typography>\r\n        </MenuItem>\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function AppNewInvoice() {\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"New Invoice\" sx={{ mb: 3 }} />\r\n      <Scrollbar>\r\n        <TableContainer sx={{ minWidth: 720 }}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>Invoice ID</TableCell>\r\n                <TableCell>Category</TableCell>\r\n                <TableCell>Price</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell />\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {MOCK_INVOICES.map((row) => (\r\n                <TableRow key={row.id}>\r\n                  <TableCell>{`INV-${row.id}`}</TableCell>\r\n                  <TableCell>{row.category}</TableCell>\r\n                  <TableCell>{fCurrency(row.price)}</TableCell>\r\n                  <TableCell>\r\n                    <Label\r\n                      variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n                      color={\r\n                        (row.status === 'in_progress' && 'warning') ||\r\n                        (row.status === 'out_of_date' && 'error') ||\r\n                        'success'\r\n                      }\r\n                    >\r\n                      {sentenceCase(row.status)}\r\n                    </Label>\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    <MoreMenuButton />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Scrollbar>\r\n\r\n      <Divider />\r\n\r\n      <Box sx={{ p: 2, textAlign: 'right' }}>\r\n        <Button\r\n          to=\"#\"\r\n          size=\"small\"\r\n          color=\"inherit\"\r\n          component={RouterLink}\r\n          endIcon={<Icon icon={arrowIosForwardFill} />}\r\n        >\r\n          View All\r\n        </Button>\r\n      </Box>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { random, orderBy } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport heartFill from '@iconify/icons-eva/heart-fill';\r\nimport trophyFilled from '@iconify/icons-ant-design/trophy-filled';\r\n// material\r\nimport { alpha, styled } from '@material-ui/core/styles';\r\nimport { Box, Stack, Card, Avatar, CardHeader, Typography } from '@material-ui/core';\r\n// utils\r\nimport { fShortenNumber } from '../../../utils/formatNumber';\r\nimport mockData from '../../../utils/mock-data';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_AUTHORS = [...Array(3)].map((_, index) => ({\r\n  id: mockData.id(index),\r\n  name: mockData.name.fullName(index),\r\n  avatar: mockData.image.avatar(index),\r\n  favourite: random(9999, 19999)\r\n}));\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  width: 40,\r\n  height: 40,\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.primary.main,\r\n  backgroundColor: alpha(theme.palette.primary.main, 0.08)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAuthorItem.propTypes = {\r\n  author: PropTypes.shape({\r\n    avatar: PropTypes.string,\r\n    favourite: PropTypes.number,\r\n    name: PropTypes.string\r\n  }),\r\n  index: PropTypes.number\r\n};\r\n\r\nfunction AuthorItem({ author, index }) {\r\n  return (\r\n    <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n      <Avatar alt={author.name} src={author.avatar} />\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Typography variant=\"subtitle2\">{author.name}</Typography>\r\n        <Typography\r\n          variant=\"caption\"\r\n          sx={{\r\n            mt: 0.5,\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            color: 'text.secondary'\r\n          }}\r\n        >\r\n          <Box component={Icon} icon={heartFill} sx={{ width: 16, height: 16, mr: 0.5 }} />\r\n          {fShortenNumber(author.favourite)}\r\n        </Typography>\r\n      </Box>\r\n\r\n      <IconWrapperStyle\r\n        sx={{\r\n          ...(index === 1 && {\r\n            color: 'info.main',\r\n            bgcolor: (theme) => alpha(theme.palette.info.main, 0.08)\r\n          }),\r\n          ...(index === 2 && {\r\n            color: 'error.main',\r\n            bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\r\n          })\r\n        }}\r\n      >\r\n        <Icon icon={trophyFilled} width={20} height={20} />\r\n      </IconWrapperStyle>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default function AppTopAuthors() {\r\n  const displayAuthor = orderBy(MOCK_AUTHORS, ['favourite'], ['desc']);\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Top Authors\" />\r\n      <Stack spacing={3} sx={{ p: 3 }}>\r\n        {displayAuthor.map((author, index) => (\r\n          <AuthorItem key={author.id} author={author} index={index} />\r\n        ))}\r\n      </Stack>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { random } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport appleFilled from '@iconify/icons-ant-design/apple-filled';\r\nimport windowsFilled from '@iconify/icons-ant-design/windows-filled';\r\nimport androidFilled from '@iconify/icons-ant-design/android-filled';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box, Card, CardHeader, Typography, Stack } from '@material-ui/core';\r\n// utils\r\nimport mockData from '../../../utils/mock-data';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\nimport { fShortenNumber } from '../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_INSTALLED = ['de', 'en', 'fr', 'kr', 'us'].map((country, index) => ({\r\n  id: mockData.id(index),\r\n  name:\r\n    (country === 'de' && 'Germany') ||\r\n    (country === 'en' && 'England') ||\r\n    (country === 'fr' && 'France') ||\r\n    (country === 'kr' && 'Korean') ||\r\n    'USA',\r\n  android: random(99999),\r\n  windows: random(99999),\r\n  apple: random(99999),\r\n  flag: `/static/icons/ic_flag_${country}.svg`\r\n}));\r\n\r\nconst ItemBlockStyle = styled((props) => <Stack direction=\"row\" alignItems=\"center\" {...props} />)({\r\n  minWidth: 72,\r\n  flex: '1 1'\r\n});\r\n\r\nconst ItemIconStyle = styled(Icon)(({ theme }) => ({\r\n  width: 16,\r\n  height: 16,\r\n  marginRight: theme.spacing(0.5),\r\n  color: theme.palette.text.disabled\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nCountryItem.propTypes = {\r\n  country: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    flag: PropTypes.string,\r\n    name: PropTypes.string,\r\n    android: PropTypes.number,\r\n    windows: PropTypes.number,\r\n    apple: PropTypes.number\r\n  })\r\n};\r\n\r\nfunction CountryItem({ country }) {\r\n  return (\r\n    <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n      <ItemBlockStyle sx={{ minWidth: 120 }}>\r\n        <Box component=\"img\" alt={country.name} src={country.flag} sx={{ height: 20, mr: 1 }} />\r\n        <Typography variant=\"subtitle2\">{country.name}</Typography>\r\n      </ItemBlockStyle>\r\n      <ItemBlockStyle>\r\n        <ItemIconStyle icon={androidFilled} />\r\n        <Typography variant=\"body2\">{fShortenNumber(country.android)}</Typography>\r\n      </ItemBlockStyle>\r\n      <ItemBlockStyle>\r\n        <ItemIconStyle icon={windowsFilled} />\r\n        <Typography variant=\"body2\">{fShortenNumber(country.windows)}</Typography>\r\n      </ItemBlockStyle>\r\n      <ItemBlockStyle sx={{ minWidth: 88 }}>\r\n        <ItemIconStyle icon={appleFilled} />\r\n        <Typography variant=\"body2\">{fShortenNumber(country.windows)}</Typography>\r\n      </ItemBlockStyle>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default function AppTopInstalledCountries() {\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Top Installed Countries\" />\r\n      <Scrollbar>\r\n        <Stack spacing={3} sx={{ p: 3 }}>\r\n          {MOCK_INSTALLED.map((country) => (\r\n            <CountryItem key={country.id} country={country} />\r\n          ))}\r\n        </Stack>\r\n      </Scrollbar>\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { noCase } from 'change-case';\r\nimport { random } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport appleFilled from '@iconify/icons-ant-design/apple-filled';\r\nimport windowsFilled from '@iconify/icons-ant-design/windows-filled';\r\n// material\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { Box, Card, Rating, CardHeader, Typography, Stack } from '@material-ui/core';\r\n// utils\r\nimport { fCurrency, fShortenNumber } from '../../../utils/formatNumber';\r\nimport mockData from '../../../utils/mock-data';\r\n//\r\nimport Label from '../../Label';\r\nimport Scrollbar from '../../Scrollbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst MOCK_APPLICATIONS = ['Chrome', 'Drive', 'Dropbox', 'Evernote', 'Github'].map((appName, index) => ({\r\n  id: mockData.id(index),\r\n  name: appName,\r\n  system: (index === 2 && 'Windows') || (index === 4 && 'Windows') || 'Mac',\r\n  price: index === 0 || index === 2 || index === 4 ? 0 : mockData.number.price(index),\r\n  rating: mockData.number.rating(index),\r\n  review: random(99989, true),\r\n  shortcut: `/static/icons/ic_${noCase(appName)}.svg`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nApplicationItem.propTypes = {\r\n  app: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    price: PropTypes.number,\r\n    rating: PropTypes.number,\r\n    review: PropTypes.number,\r\n    shortcut: PropTypes.string,\r\n    system: PropTypes.string\r\n  })\r\n};\r\n\r\nfunction ApplicationItem({ app }) {\r\n  const theme = useTheme();\r\n  const { shortcut, system, price, rating, review, name } = app;\r\n\r\n  return (\r\n    <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\r\n      <Box\r\n        sx={{\r\n          width: 48,\r\n          height: 48,\r\n          flexShrink: 0,\r\n          display: 'flex',\r\n          borderRadius: 1.5,\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          bgcolor: 'background.neutral'\r\n        }}\r\n      >\r\n        <img src={shortcut} alt={name} width={24} height={24} />\r\n      </Box>\r\n\r\n      <Box sx={{ flexGrow: 1, minWidth: 160 }}>\r\n        <Typography variant=\"subtitle2\">{name}</Typography>\r\n        <Stack direction=\"row\" alignItems=\"center\" sx={{ mt: 0.5, color: 'text.secondary' }}>\r\n          <Icon width={16} height={16} icon={system === 'Mac' ? appleFilled : windowsFilled} />\r\n          <Typography variant=\"caption\" sx={{ ml: 0.5, mr: 1 }}>\r\n            {system}\r\n          </Typography>\r\n          <Label\r\n            variant={theme.palette.mode === 'light' ? 'ghost' : 'filled'}\r\n            color={price === 0 ? 'success' : 'error'}\r\n          >\r\n            {price === 0 ? 'Free' : fCurrency(price)}\r\n          </Label>\r\n        </Stack>\r\n      </Box>\r\n\r\n      <Stack alignItems=\"flex-end\" sx={{ pr: 3 }}>\r\n        <Rating readOnly size=\"small\" precision={0.5} name=\"reviews\" value={rating} />\r\n        <Typography variant=\"caption\" sx={{ mt: 0.5, color: 'text.secondary' }}>\r\n          {fShortenNumber(review)}&nbsp;reviews\r\n        </Typography>\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default function AppTopRelated() {\r\n  return (\r\n    <Card>\r\n      <CardHeader title=\"Top Related Applications\" />\r\n      <Scrollbar>\r\n        <Stack spacing={3} sx={{ p: 3, pr: 0 }}>\r\n          {MOCK_APPLICATIONS.map((app) => (\r\n            <ApplicationItem key={app.id} app={app} />\r\n          ))}\r\n        </Stack>\r\n      </Scrollbar>\r\n    </Card>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport PropTypes from 'prop-types';\r\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\r\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, Stack } from '@material-ui/core';\r\n// utils\r\nimport { fNumber, fPercent } from '../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  width: 24,\r\n  height: 24,\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.success.main,\r\n  backgroundColor: alpha(theme.palette.success.main, 0.16)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [{ data: [20, 41, 63, 33, 28, 35, 50, 46, 11, 26] }];\r\n\r\nAppTotalActiveUsers.prototype = {\r\n  totalUsers: PropTypes.number\r\n};\r\n\r\nexport default function AppTotalActiveUsers({ totalUsers }) {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    colors: [theme.palette.primary.main],\r\n    chart: { sparkline: { enabled: true } },\r\n    plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\r\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\r\n    tooltip: {\r\n      x: { show: false },\r\n      y: {\r\n        formatter: (seriesName) => fNumber(seriesName),\r\n        title: {\r\n          formatter: () => ''\r\n        }\r\n      },\r\n      marker: { show: false }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Typography variant=\"subtitle2\">Total Active Users</Typography>\r\n\r\n        <Typography variant=\"h3\">{fNumber(totalUsers)}</Typography>\r\n      </Box>\r\n\r\n      <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\r\n    </Card>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport PropTypes from 'prop-types';\r\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\r\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, Stack } from '@material-ui/core';\r\n// utils\r\nimport { fNumber, fPercent } from '../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  width: 24,\r\n  height: 24,\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.success.main,\r\n  backgroundColor: alpha(theme.palette.success.main, 0.16)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [{ data: [20, 41, 63, 33, 28, 35, 50, 46, 11, 26] }];\r\n\r\nAppTotalRegisterUsers.prototype = {\r\n  totalUsers: PropTypes.number\r\n};\r\n\r\nexport default function AppTotalRegisterUsers({ totalUsers }) {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    colors: [theme.palette.info.main],\r\n    chart: { sparkline: { enabled: true } },\r\n    plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\r\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\r\n    tooltip: {\r\n      x: { show: false },\r\n      y: {\r\n        formatter: (seriesName) => fNumber(seriesName),\r\n        title: {\r\n          formatter: () => ''\r\n        }\r\n      },\r\n      marker: { show: false }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Typography variant=\"subtitle2\">Total Registered Users</Typography>\r\n\r\n        <Typography variant=\"h3\">{fNumber(totalUsers)}</Typography>\r\n      </Box>\r\n\r\n      <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\r\n    </Card>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport PropTypes from 'prop-types';\r\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\r\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, Stack } from '@material-ui/core';\r\n// utils\r\nimport { fNumber, fPercent } from '../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  width: 24,\r\n  height: 24,\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.success.main,\r\n  backgroundColor: alpha(theme.palette.success.main, 0.16)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CHART_DATA = [{ data: [20, 41, 63, 33, 28, 35, 50, 46, 11, 26] }];\r\n\r\nAppTotalOnlineVisitors.prototype = {\r\n  totalUsers: PropTypes.number\r\n};\r\n\r\nexport default function AppTotalOnlineVisitors({ totalUsers }) {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    colors: [theme.palette.secondary.main],\r\n    chart: { sparkline: { enabled: true } },\r\n    plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\r\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\r\n    tooltip: {\r\n      x: { show: false },\r\n      y: {\r\n        formatter: (seriesName) => fNumber(seriesName),\r\n        title: {\r\n          formatter: () => ''\r\n        }\r\n      },\r\n      marker: { show: false }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Typography variant=\"subtitle2\">Total Online Users</Typography>\r\n\r\n        <Typography variant=\"h3\">{fNumber(totalUsers)}</Typography>\r\n      </Box>\r\n\r\n      <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\r\n    </Card>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\r\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, Stack } from '@material-ui/core';\r\n// utils\r\nimport { fNumber, fPercent } from '../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  width: 24,\r\n  height: 24,\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.success.main,\r\n  backgroundColor: alpha(theme.palette.success.main, 0.16)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst PERCENT = -0.06;\r\nconst CHART_DATA = [{ data: [8, 9, 31, 8, 16, 37, 8, 33, 46, 31] }];\r\n\r\nAppTotalDownloads.prototype = {\r\n  totalDownloads: PropTypes.any\r\n};\r\n\r\nexport default function AppTotalDownloads({ totalDownloads }) {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    colors: [theme.palette.chart.red[0]],\r\n    chart: { sparkline: { enabled: true } },\r\n    plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\r\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\r\n    tooltip: {\r\n      x: { show: false },\r\n      y: {\r\n        formatter: (seriesName) => fNumber(seriesName),\r\n        title: {\r\n          formatter: () => ''\r\n        }\r\n      },\r\n      marker: { show: false }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Typography variant=\"subtitle2\">Total Downloads</Typography>\r\n\r\n        <Typography variant=\"h3\">{fNumber(totalDownloads)}</Typography>\r\n      </Box>\r\n\r\n      <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\r\n    </Card>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport trendingUpFill from '@iconify/icons-eva/trending-up-fill';\r\nimport trendingDownFill from '@iconify/icons-eva/trending-down-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, Card, Typography, Stack } from '@material-ui/core';\r\n// utils\r\nimport { fNumber, fPercent } from '../../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\r\n  width: 24,\r\n  height: 24,\r\n  display: 'flex',\r\n  borderRadius: '50%',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.success.main,\r\n  backgroundColor: alpha(theme.palette.success.main, 0.16)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst PERCENT = 0.15;\r\nconst CHART_DATA = [{ data: [5, 18, 12, 51, 68, 11, 39, 37, 27, 20] }];\r\n\r\nAppTotalInstalled.prototype = {\r\n  totalInstalled: PropTypes.any\r\n};\r\n\r\nexport default function AppTotalInstalled({ totalInstalled }) {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = {\r\n    colors: [theme.palette.chart.blue[0]],\r\n    chart: { sparkline: { enabled: true } },\r\n    plotOptions: { bar: { columnWidth: '68%', borderRadius: 2 } },\r\n    labels: ['1', '2', '3', '4', '5', '6', '7', '8'],\r\n    tooltip: {\r\n      x: { show: false },\r\n      y: {\r\n        formatter: (seriesName) => fNumber(seriesName),\r\n        title: {\r\n          formatter: () => ''\r\n        }\r\n      },\r\n      marker: { show: false }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card sx={{ display: 'flex', alignItems: 'center', p: 3 }}>\r\n      <Box sx={{ flexGrow: 1 }}>\r\n        <Typography variant=\"subtitle2\">Total Installed</Typography>\r\n\r\n        <Typography variant=\"h3\">{fNumber(totalInstalled)}</Typography>\r\n      </Box>\r\n\r\n      <ReactApexChart type=\"bar\" series={CHART_DATA} options={chartOptions} width={60} height={36} />\r\n    </Card>\r\n  );\r\n}\r\n","import { merge } from 'lodash';\r\nimport { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactApexChart from 'react-apexcharts';\r\n// material\r\nimport { Card, CardHeader, Box, TextField } from '@material-ui/core';\r\n//\r\nimport moment from 'moment';\r\nimport { BaseOptionChart } from '../../charts';\r\nimport axios from '../../../utils/axios';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\n// const CHART_DATA = [\r\n//   {\r\n//     category: 'statistics',\r\n//     data: [\r\n//       // { name: 'Active Users', data: [0, 0, 0, 0, 0, 13, 16, 17, 26, 40] },\r\n//       { name: 'Online Users', data: [0, 0, 0, 0, 22, 45, 42, 12, 12, 5] },\r\n//       { name: 'Registered Users', data: [0, 0, 0, 0, 1, 19, 20, 24, 36, 51] }\r\n//       // { name: 'App Installed', data: [0, 10, 21, 35, 40, 49, 62, 69, 91, 102] },\r\n//       // { name: 'App Download', data: [0, 12, 25, 38, 42, 58, 64, 72, 97, 120] }\r\n//     ]\r\n//   }\r\n// ];\r\n\r\nAppTotalChart.propTypes = {\r\n  chartDate: PropTypes.string\r\n};\r\n\r\nexport default function AppTotalChart({ chartDate }) {\r\n  const [seriesData, setSeriesData] = useState('statistics');\r\n  const [dateCount, setDateCount] = useState(10);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getAnalytics() {\r\n      if (chartDate) {\r\n        const toDateObj = new Date(chartDate);\r\n        const fromDateObj = new Date(toDateObj.getTime() - (dateCount - 1) * 1000 * 60 * 60 * 24);\r\n        const fromDate = moment(fromDateObj).format('YYYY-MM-DD');\r\n        const toDate = chartDate;\r\n        const { data } = await axios.get(`/analytics/logs/${fromDate}/${toDate}`);\r\n        if (data.error) {\r\n          const zeroValueArr = [];\r\n          for (let i = 0; i < dateCount; i += 1) {\r\n            zeroValueArr.push(0);\r\n          }\r\n          const CHART_DATA = [\r\n            {\r\n              category: 'statistics',\r\n              data: [\r\n                { name: 'Online Users', data: zeroValueArr },\r\n                { name: 'Registered Users', data: zeroValueArr }\r\n              ]\r\n            }\r\n          ];\r\n          setChartData(CHART_DATA);\r\n        } else {\r\n          const { logs } = data;\r\n          const onlineUserArr = [];\r\n          const registerUserArr = [];\r\n          for (let i = 0; i < dateCount; i += 1) {\r\n            onlineUserArr.push(0);\r\n            registerUserArr.push(0);\r\n          }\r\n          const lastDateLimit = new Date(toDateObj.getTime() + 1000 * 60 * 60 * 24);\r\n          for (let i = 0; i < logs.length; i += 1) {\r\n            const logDate = new Date(logs[i].date);\r\n            console.log(logs[i]);\r\n            if (logDate >= fromDateObj && logDate < lastDateLimit) {\r\n              const index = Math.floor((logDate.getTime() - fromDateObj.getTime()) / (1000 * 60 * 60 * 24));\r\n              onlineUserArr[index] = logs[i].online_user_num;\r\n              registerUserArr[index] = logs[i].register_user_num;\r\n            }\r\n          }\r\n          const CHART_DATA = [\r\n            {\r\n              category: 'statistics',\r\n              data: [\r\n                { name: 'Online Users', data: onlineUserArr },\r\n                { name: 'Registered Users', data: registerUserArr }\r\n              ]\r\n            }\r\n          ];\r\n          setChartData(CHART_DATA);\r\n        }\r\n      }\r\n    }\r\n    getAnalytics();\r\n  }, [chartDate]);\r\n\r\n  const handleChangeSeriesData = (event) => {\r\n    setSeriesData(Number(event.target.value));\r\n  };\r\n\r\n  const daysList = (num) => {\r\n    const date = new Date(chartDate);\r\n    const datesCollection = [];\r\n\r\n    for (let i = 0; i < num; i += 1) {\r\n      const newDate = new Date(date.getTime() - i * 1000 * 60 * 60 * 24);\r\n      const dateFromatStr = moment(newDate).format('YYYY MMM DD');\r\n      // datesCollection.unshift(`${newDate.getDate()}/${newDate.getMonth() + 1}/${newDate.getFullYear()}`);\r\n      datesCollection.unshift(dateFromatStr);\r\n    }\r\n\r\n    return datesCollection;\r\n  };\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    xaxis: {\r\n      categories: daysList(dateCount)\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader\r\n        title=\"Statistics Chart\"\r\n        subheader=\"Growing Fast\"\r\n        // action={\r\n        //   <TextField\r\n        //     select\r\n        //     fullWidth\r\n        //     value={seriesData}\r\n        //     SelectProps={{ native: true }}\r\n        //     onChange={handleChangeSeriesData}\r\n        //     sx={{\r\n        //       '& fieldset': { border: '0 !important' },\r\n        //       '& select': { pl: 1, py: 0.5, pr: '24px !important', typography: 'subtitle2' },\r\n        //       '& .MuiOutlinedInput-root': { borderRadius: 0.75, bgcolor: 'background.neutral' },\r\n        //       '& .MuiNativeSelect-icon': { top: 4, right: 0, width: 20, height: 20 }\r\n        //     }}\r\n        //   >\r\n        //     {CHART_DATA.map((option) => (\r\n        //       <option key={option.category} value={option.category}>\r\n        //         {option.category}\r\n        //       </option>\r\n        //     ))}\r\n        //   </TextField>\r\n        // }\r\n      />\r\n\r\n      {chartData.map((item) => (\r\n        <Box key={item.category} sx={{ mt: 3, mx: 3 }} dir=\"ltr\">\r\n          {item.category === seriesData && (\r\n            <ReactApexChart type=\"line\" series={item.data} options={chartOptions} height={364} />\r\n          )}\r\n        </Box>\r\n      ))}\r\n    </Card>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Typography, Button, Card, CardContent } from '@material-ui/core';\r\nimport { SeoIllustration } from '../../../assets';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  boxShadow: 'none',\r\n  textAlign: 'center',\r\n  backgroundColor: theme.palette.primary.lighter,\r\n  [theme.breakpoints.up('md')]: {\r\n    height: '100%',\r\n    display: 'flex',\r\n    textAlign: 'left',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-between'\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAppWelcome.propTypes = {\r\n  displayName: PropTypes.string\r\n};\r\n\r\nexport default function AppWelcome({ displayName }) {\r\n  return (\r\n    <RootStyle>\r\n      <CardContent\r\n        sx={{\r\n          p: { md: 0 },\r\n          pl: { md: 5 },\r\n          color: 'grey.800'\r\n        }}\r\n      >\r\n        <Typography gutterBottom variant=\"h4\">\r\n          Welcome back,\r\n          <br /> {!displayName ? '...' : displayName}!\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\" sx={{ pb: { xs: 3, xl: 5 }, maxWidth: 480, mx: 'auto' }}>\r\n          If you are going to use a passage of Lorem Ipsum, you need to be sure there isn't anything\r\n        </Typography>\r\n\r\n        <Button variant=\"contained\" to=\"#\" component={RouterLink}>\r\n          Go Now\r\n        </Button>\r\n      </CardContent>\r\n\r\n      <SeoIllustration\r\n        sx={{\r\n          p: 3,\r\n          width: 360,\r\n          margin: { xs: 'auto', md: 'inherit' }\r\n        }}\r\n      />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import { merge } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport personFill from '@iconify/icons-eva/person-fill';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Card, Typography, Box } from '@material-ui/core';\r\n// utils\r\nimport { fNumber } from '../../../utils/formatNumber';\r\nimport { BaseOptionChart } from '../../charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  display: 'flex',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(3),\r\n  backgroundColor: theme.palette.primary.darker\r\n}));\r\n\r\nconst IconStyle = styled(Icon)(({ theme }) => ({\r\n  width: 120,\r\n  height: 120,\r\n  opacity: 0.12,\r\n  position: 'absolute',\r\n  right: theme.spacing(-3),\r\n  color: theme.palette.common.white\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TOTAL = 38566;\r\nconst CHART_DATA = [44];\r\n\r\nexport default function AppWidgets1() {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    chart: { sparkline: { enabled: true } },\r\n    legend: { show: false },\r\n    plotOptions: {\r\n      radialBar: {\r\n        hollow: { size: '78%' },\r\n        track: { margin: 0 },\r\n        dataLabels: {\r\n          name: { show: false },\r\n          value: {\r\n            offsetY: 6,\r\n            color: theme.palette.common.white,\r\n            fontSize: theme.typography.subtitle2.fontSize\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <RootStyle>\r\n      <ReactApexChart type=\"radialBar\" series={CHART_DATA} options={chartOptions} width={86} height={86} />\r\n      <Box sx={{ ml: 3, color: 'common.white' }}>\r\n        <Typography variant=\"h4\"> {fNumber(TOTAL)}</Typography>\r\n        <Typography variant=\"body2\" sx={{ opacity: 0.72 }}>\r\n          Conversion\r\n        </Typography>\r\n      </Box>\r\n      <IconStyle icon={personFill} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import { merge } from 'lodash';\r\nimport { Icon } from '@iconify/react';\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport emailFill from '@iconify/icons-eva/email-fill';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Card, Box, Typography } from '@material-ui/core';\r\n// utils\r\nimport { fNumber } from '../../../utils/formatNumber';\r\n//\r\nimport { BaseOptionChart } from '../../charts';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled(Card)(({ theme }) => ({\r\n  display: 'flex',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(3),\r\n  backgroundColor: theme.palette.warning.darker\r\n}));\r\n\r\nconst IconStyle = styled(Icon)(({ theme }) => ({\r\n  width: 120,\r\n  height: 120,\r\n  opacity: 0.12,\r\n  position: 'absolute',\r\n  right: theme.spacing(-3),\r\n  color: theme.palette.common.white\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TOTAL = 55566;\r\nconst CHART_DATA = [75];\r\n\r\nexport default function AppWidgets2() {\r\n  const theme = useTheme();\r\n\r\n  const chartOptions = merge(BaseOptionChart(), {\r\n    colors: [theme.palette.warning.main],\r\n    chart: { sparkline: { enabled: true } },\r\n    legend: { show: false },\r\n    plotOptions: {\r\n      radialBar: {\r\n        hollow: { size: '78%' },\r\n        track: { margin: 0 },\r\n        dataLabels: {\r\n          name: { show: false },\r\n          value: {\r\n            offsetY: 6,\r\n            color: theme.palette.common.white,\r\n            fontSize: theme.typography.subtitle2.fontSize\r\n          }\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  return (\r\n    <RootStyle>\r\n      <ReactApexChart type=\"radialBar\" series={CHART_DATA} options={chartOptions} width={86} height={86} />\r\n      <Box sx={{ ml: 3, color: 'common.white' }}>\r\n        <Typography variant=\"h4\"> {fNumber(TOTAL)}</Typography>\r\n        <Typography variant=\"body2\" sx={{ opacity: 0.72 }}>\r\n          Conversion\r\n        </Typography>\r\n      </Box>\r\n      <IconStyle icon={emailFill} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import React from 'react';\r\n// material\r\nimport { Container, Grid, Box, TextField, Typography } from '@material-ui/core';\r\nimport { format } from 'date-fns';\r\n// hooks\r\nimport useAuth from '../../hooks/useAuth';\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport {\r\n  AppWelcome,\r\n  AppWidgets1,\r\n  AppWidgets2,\r\n  AppFeatured,\r\n  AppNewInvoice,\r\n  AppTopAuthors,\r\n  AppTopRelated,\r\n  AppAreaInstalled,\r\n  AppTotalDownloads,\r\n  AppTotalInstalled,\r\n  AppCurrentDownload,\r\n  AppTotalActiveUsers,\r\n  AppTotalRegisterUsers,\r\n  AppTotalOnlineVisitors,\r\n  AppTotalChart,\r\n  AppTopInstalledCountries\r\n} from '../../components/_dashboard/general-app';\r\nimport axios from '../../utils/axios';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function GeneralApp() {\r\n  const { themeStretch } = useSettings();\r\n  const [totalUsers, setTotalUsers] = React.useState(0);\r\n  const [totalRegisteredUsers, setTotalRegisteredUsers] = React.useState(0);\r\n  const [totalOnlineVisitors, setTotalOnlineVisitors] = React.useState(0);\r\n  const [totalInstalled, setTotalInstalled] = React.useState(0);\r\n  const [totalDownloads, setTotalDownloads] = React.useState(0);\r\n  const [selectedDate, setSelectedDate] = React.useState(format(new Date(), 'yyyy-MM-dd'));\r\n  const { user } = useAuth();\r\n\r\n  const handleDateChange = (e) => {\r\n    setSelectedDate(e.target.value);\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    async function getAnalytics() {\r\n      if (selectedDate) {\r\n        const { data } = await axios.get(`/analytics/logs/${selectedDate}`);\r\n        if (data.error) {\r\n          console.log(data);\r\n          setTotalRegisteredUsers(0);\r\n          setTotalOnlineVisitors(0);\r\n          return;\r\n        }\r\n        // setTotalUsers(data.logs.active_user_num);\r\n        setTotalRegisteredUsers(data.logs.register_user_num);\r\n        setTotalOnlineVisitors(data.logs.online_user_num);\r\n        // setTotalInstalled(data.statistics.installs);\r\n        // setTotalDownloads(data.statistics.maxInstalls);\r\n      }\r\n    }\r\n    getAnalytics();\r\n  }, [selectedDate]);\r\n\r\n  return (\r\n    <Page title=\"App | Locals\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <Box sx={{ pb: 5 }}>\r\n          <Typography variant=\"h4\">Hi, Welcome back</Typography>\r\n        </Box>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12}>\r\n            <TextField\r\n              name=\"date\"\r\n              label=\"Date\"\r\n              InputLabelProps={{ shrink: true, required: true }}\r\n              type=\"date\"\r\n              onChange={handleDateChange}\r\n              defaultValue={selectedDate}\r\n            />\r\n          </Grid>\r\n          {/* <Grid item xs={12} md={4}>\r\n            <AppTotalActiveUsers totalUsers={totalUsers} />\r\n          </Grid> */}\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <AppTotalOnlineVisitors totalUsers={totalOnlineVisitors} />\r\n          </Grid>\r\n\r\n          <Grid item xs={12} md={4}>\r\n            <AppTotalRegisterUsers totalUsers={totalRegisteredUsers} />\r\n          </Grid>\r\n\r\n          {/* <Grid item xs={12} md={4}>\r\n            <AppTotalInstalled totalInstalled={totalInstalled} />\r\n          </Grid> */}\r\n\r\n          {/* <Grid item xs={12} md={4}>\r\n            <AppTotalDownloads totalDownloads={totalDownloads} />\r\n          </Grid> */}\r\n\r\n          <Grid item xs={12} md={12} lg={12}>\r\n            <AppTotalChart chartDate={selectedDate} />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}