{"version":3,"sources":["components/HeaderBreadcrumbs.js","utils/fakeRequest.js","components/SearchNotFound.js","utils/getFileFormat.js","components/EmojiPicker.js","components/LightboxModal.js","components/_dashboard/chat/ChatContactSearch.js","components/_dashboard/chat/ChatConversationItem.js","components/_dashboard/chat/ChatConversationList.js","components/_dashboard/chat/ChatHeaderCompose.js","components/_dashboard/chat/ChatHeaderDetail.js","components/_dashboard/chat/ChatMessageInput.js","components/_dashboard/chat/ChatMessageItem.js","components/_dashboard/chat/ChatMessageList.js","components/_dashboard/chat/ChatRoomAttachment.js","components/_dashboard/chat/ChatRoomOneParticipant.js","components/_dashboard/chat/ChatRoomPopup.js","components/_dashboard/chat/ChatRoomGroupParticipant.js","components/_dashboard/chat/ChatRoom.js","components/_dashboard/chat/ChatSearchResults.js","components/_dashboard/chat/ChatSidebar.js","components/_dashboard/chat/ChatWindow.js","components/_dashboard/chat/ChatAdminMessageForm.js","pages/dashboard/Chat.js"],"names":["HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","fakeRequest","time","Promise","res","setTimeout","SearchNotFound","searchQuery","align","FORMAT_IMG","FORMAT_VIDEO","FORMAT_WORD","FORMAT_EXCEL","FORMAT_POWERPOINT","FORMAT_PDF","FORMAT_PHOTOSHOP","FORMAT_ILLUSTRATOR","getFileType","fileUrl","split","pop","getFileName","substring","lastIndexOf","replace","getFileFullName","getIcon","name","component","src","alt","width","height","getFileThumb","thumb","format","includes","getFileFormat","Icon","icon","fileFill","RootStyle","styled","position","PickerStyle","theme","bottom","overflow","left","spacing","boxShadow","customShadows","z20","borderRadius","shape","borderRadiusMd","border","backgroundColor","palette","background","paper","color","text","disabled","primary","borderColor","divider","grey","typography","body2","opacity","fill","subtitle2","backdropFilter","WebkitBackdropFilter","alpha","selected","outline","secondary","EmojiPicker","emojiPicker","value","setValue","alignRight","useTheme","useState","emojiPickerState","SetEmojiPicker","main","title","emoji","onSelect","native","onClickAway","right","size","onClick","e","preventDefault","smilingFaceFill","useStyles","makeStyles","isRTL","direction","backgroundIcon","iconName","backgroundSize","backgroundPosition","backgroundRepeat","backgroundImage","createStyles","root","padding","justifyContent","marginLeft","borderRadiusSm","LightboxModal","images","photoIndex","setPhotoIndex","isOpen","onClose","classes","useEffect","document","body","style","toolbarButtons","length","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","reactModalStyle","overlay","zIndex","wrapperClassName","marginTop","SearchStyle","OutlinedInput","transition","transitions","create","easing","easeInOut","duration","shorter","z8","borderWidth","ChatContactSearch","query","onChange","onFocus","ClickAwayListener","FormControl","fullWidth","placeholder","startAdornment","InputAdornment","Box","searchFill","ListItemButton","AvatarWrapperStyle","ChatConversationItem","isSelected","conversation","onSelectConversation","isOpenSidebar","details","currentUserId","otherParticipants","participants","filter","participant","id","displayNames","reduce","names","join","displayText","lastMessage","messages","sender","senderId","message","contentType","getDetails","displayLastActivity","last","createdAt","isGroup","isUnread","unreadCount","isOnlineGroup","item","status","disableGutters","bgcolor","ListItemAvatar","top","slice","className","Avatar","avatar","BadgeStatus","_id","ListItemText","primaryTypographyProps","secondaryTypographyProps","ml","flexDirection","fontSize","lineHeight","whiteSpace","formatDistanceToNowStrict","Date","addSuffix","ChatConversationList","conversations","activeConversationId","navigate","useNavigate","List","disablePadding","allIds","conversationId","byId","conversationKey","type","find","username","PATH_DASHBOARD","chat","handleSelectConversation","AutocompleteStyle","minWidth","ChatHeaderCompose","contacts","recipients","onAddRecipient","setQuery","Typography","Autocomplete","multiple","disablePortal","popupIcon","clearText","noOptionsText","recipient","onInputChange","event","options","getOptionLabel","renderOption","props","inputValue","matches","match","parts","parse","checkmarkFill","part","index","highlight","renderTags","getTagProps","Chip","label","renderInput","params","TextField","minHeight","OneAvatar","undefined","capitalCase","fToNow","lastActivity","GroupAvatar","AvatarGroup","max","Link","underline","arrowIosForwardFill","ChatHeaderDetail","phoneFill","videoFill","moreVerticalFill","paddingLeft","ChatMessageInput","onSend","dispatch","useDispatch","fileInputRef","useRef","setMessage","user","useAuth","handleSend","a","accessToken","window","localStorage","getItem","authHeader","headers","Authorization","messageId","uuidv4","attachments","axios","post","resp","getConversation","data","Input","disableUnderline","onKeyUp","key","Divider","orientation","flexItem","IconButton","mx","roundSend","ref","marginBottom","ContentStyle","maxWidth","neutral","InfoStyle","MessageImgStyle","cursor","objectFit","ChatMessageItem","onOpenLightbox","console","log","senderDetails","avatarUrl","isMe","isImage","firstName","ChatMessageList","scrollRef","openLightbox","setOpenLightbox","selectedImage","setSelectedImage","current","scrollTop","scrollHeight","handleOpenLightbox","url","findIndex","Scrollbar","scrollableNodeProps","p","paddingBottom","Button","overline","CollapseButtonStyle","RowIconStyle","RowTextStyle","wordWrap","ChatRoomOneParticipant","isCollapse","onCollapse","pt","pb","textAlign","endIcon","arrowIosDownwardFill","Collapse","in","Stack","pinFill","address","phone","emailFill","email","RowStyle","IconStyle","marginRight","ChatRoomPopup","open","DialogContent","paragraph","Participant","onClosePopup","onShowPopup","px","ChatRoomGroupParticipant","selectUserId","onShowPopupUserInfo","disableRipple","HEIGHT","borderLeft","ToggleButtonStyle","borderRight","borderTopLeftRadius","borderBottomLeftRadius","ChatRoom","isMobile","useMediaQuery","breakpoints","down","openSidebar","setOpenSidebar","showInfo","setShowInfo","selectUser","setSelectUser","showParticipants","setShowParticipants","arrowIosBackFill","participantId","prev","ChatSearchResults","results","onSelectContact","isFound","result","py","ChatSidebar","setSearchQuery","searchResults","setSearchResults","isSearchFocused","setSearchFocused","displayResults","useSelector","state","handleChangeSearch","get","response","error","handleSearchSelect","ChatWindow","pathname","useLocation","useParams","unreadMessages","conversationSelector","mode","displayParticipants","getParticipants","new","resetActiveConversation","markConversationAsRead","handleSendMessage","onSendMessage","Object","values","addRecipients","ChatAdminMessageForm","chatSettings","enqueueSnackbar","useSnackbar","ChatAdminMessageSchema","Yup","admin_message","required","formik","useFormik","enableReinitialize","initialValues","settings","validationSchema","onSubmit","setSubmitting","resetForm","setErrors","put","errors","touched","handleSubmit","isSubmitting","getFieldProps","setFieldValue","noValidate","autoComplete","Grid","container","xs","md","Card","sm","multiline","minRows","maxRows","Boolean","helperText","LoadingButton","loading","Chat","themeStretch","useSettings","setting","settingsList","settingRow","getConversations","getContacts","getSettingsList","Page","Container"],"mappings":"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","file":"static/js/18.4a301764.chunk.js","sourcesContent":["import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {isString(moreLink) ? (\r\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","// ----------------------------------------------------------------------\r\n\r\nexport default function fakeRequest(time) {\r\n  return new Promise((res) => setTimeout(res, time));\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { Paper, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nSearchNotFound.propTypes = {\r\n  searchQuery: PropTypes.string\r\n};\r\n\r\nexport default function SearchNotFound({ searchQuery = '', ...other }) {\r\n  return (\r\n    <Paper {...other}>\r\n      <Typography gutterBottom align=\"center\" variant=\"subtitle1\">\r\n        Not found\r\n      </Typography>\r\n      <Typography variant=\"body2\" align=\"center\">\r\n        No results found for &nbsp;\r\n        <strong>&quot;{searchQuery}&quot;</strong>. Try checking for typos or using complete words.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","// material\r\nimport { Box } from '@material-ui/core';\r\n//\r\nimport { Icon } from '@iconify/react';\r\nimport fileFill from '@iconify/icons-eva/file-fill';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst FORMAT_IMG = ['jpg', 'jpeg', 'gif', 'bmp', 'png'];\r\nconst FORMAT_VIDEO = ['m4v', 'avi', 'mpg', 'mp4', 'webm'];\r\nconst FORMAT_WORD = ['doc', 'docx'];\r\nconst FORMAT_EXCEL = ['xls', 'xlsx'];\r\nconst FORMAT_POWERPOINT = ['ppt', 'pptx'];\r\nconst FORMAT_PDF = ['pdf'];\r\nconst FORMAT_PHOTOSHOP = ['psd'];\r\nconst FORMAT_ILLUSTRATOR = ['ai', 'esp'];\r\n\r\nexport function getFileType(fileUrl) {\r\n  return fileUrl.split('.').pop();\r\n}\r\n\r\nexport function getFileName(fileUrl) {\r\n  return fileUrl.substring(fileUrl.lastIndexOf('/') + 1).replace(/\\.[^/.]+$/, '');\r\n}\r\n\r\nexport function getFileFullName(fileUrl) {\r\n  return fileUrl.split('/').pop();\r\n}\r\n\r\nexport function getFileFormat(fileUrl) {\r\n  let format;\r\n\r\n  switch (fileUrl.includes(getFileType(fileUrl))) {\r\n    case FORMAT_IMG.includes(getFileType(fileUrl)):\r\n      format = 'image';\r\n      break;\r\n    case FORMAT_VIDEO.includes(getFileType(fileUrl)):\r\n      format = 'video';\r\n      break;\r\n    case FORMAT_WORD.includes(getFileType(fileUrl)):\r\n      format = 'word';\r\n      break;\r\n    case FORMAT_EXCEL.includes(getFileType(fileUrl)):\r\n      format = 'excel';\r\n      break;\r\n    case FORMAT_POWERPOINT.includes(getFileType(fileUrl)):\r\n      format = 'powerpoint';\r\n      break;\r\n    case FORMAT_PDF.includes(getFileType(fileUrl)):\r\n      format = 'pdf';\r\n      break;\r\n    case FORMAT_PHOTOSHOP.includes(getFileType(fileUrl)):\r\n      format = 'photoshop';\r\n      break;\r\n    case FORMAT_ILLUSTRATOR.includes(getFileType(fileUrl)):\r\n      format = 'illustrator';\r\n      break;\r\n    default:\r\n      format = getFileType(fileUrl);\r\n  }\r\n\r\n  return format;\r\n}\r\n\r\nconst getIcon = (name) => (\r\n  <Box component=\"img\" src={`/static/icons/file/${name}.svg`} alt={name} sx={{ width: 28, height: 28 }} />\r\n);\r\n\r\nexport function getFileThumb(fileUrl) {\r\n  let thumb;\r\n  switch (getFileFormat(fileUrl)) {\r\n    case 'image':\r\n      thumb = <Box component=\"img\" src={fileUrl} alt={fileUrl} sx={{ width: 1, height: 1 }} />;\r\n      break;\r\n    case 'video':\r\n      thumb = getIcon('file_type_video');\r\n      break;\r\n    case 'word':\r\n      thumb = getIcon('file_type_word');\r\n      break;\r\n    case 'excel':\r\n      thumb = getIcon('file_type_excel');\r\n      break;\r\n    case 'powerpoint':\r\n      thumb = getIcon('file_type_powerpoint');\r\n      break;\r\n    case 'pdf':\r\n      thumb = getIcon('file_type_pdf');\r\n      break;\r\n    case 'photoshop':\r\n      thumb = getIcon('file_type_photoshop');\r\n      break;\r\n    case 'illustrator':\r\n      thumb = getIcon('file_type_ai');\r\n      break;\r\n    default:\r\n      thumb = <Box component={Icon} icon={fileFill} sx={{ width: 28, height: 28 }} />;\r\n  }\r\n  return thumb;\r\n}\r\n","import 'emoji-mart/css/emoji-mart.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Picker } from 'emoji-mart';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport smilingFaceFill from '@iconify/icons-eva/smiling-face-fill';\r\n// material\r\nimport { alpha, useTheme, styled } from '@material-ui/core/styles';\r\nimport { IconButton, ClickAwayListener } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')({\r\n  position: 'relative'\r\n});\r\n\r\nconst PickerStyle = styled('div')(({ theme }) => ({\r\n  bottom: 40,\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  left: theme.spacing(-2),\r\n  boxShadow: theme.customShadows.z20,\r\n  borderRadius: theme.shape.borderRadiusMd,\r\n  '& .emoji-mart': {\r\n    border: 'none',\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  '& .emoji-mart-anchor': {\r\n    color: theme.palette.text.disabled,\r\n    '&:hover, &:focus, &.emoji-mart-anchor-selected': {\r\n      color: theme.palette.text.primary\r\n    }\r\n  },\r\n  '& .emoji-mart-bar': { borderColor: theme.palette.divider },\r\n  '& .emoji-mart-search input': {\r\n    backgroundColor: 'transparent',\r\n    color: theme.palette.text.primary,\r\n    borderColor: theme.palette.grey[500_32],\r\n    '&::placeholder': {\r\n      ...theme.typography.body2,\r\n      color: theme.palette.text.disabled\r\n    }\r\n  },\r\n  '& .emoji-mart-search-icon svg': {\r\n    opacity: 1,\r\n    fill: theme.palette.text.disabled\r\n  },\r\n  '& .emoji-mart-category-label span': {\r\n    ...theme.typography.subtitle2,\r\n    backdropFilter: 'blur(8px)',\r\n    WebkitBackdropFilter: 'blur(8px)', // Fix on Mobile\r\n    color: theme.palette.text.primary,\r\n    backgroundColor: alpha(theme.palette.background.paper, 0.8)\r\n  },\r\n  '& .emoji-mart-title-label': { color: theme.palette.text.primary },\r\n  '& .emoji-mart-category .emoji-mart-emoji:hover:before': {\r\n    backgroundColor: theme.palette.action.selected\r\n  },\r\n  '& .emoji-mart-emoji': { outline: 'none' },\r\n  '& .emoji-mart-preview-name': {\r\n    color: theme.palette.text.primary\r\n  },\r\n  '& .emoji-mart-preview-shortname, .emoji-mart-preview-emoticon': {\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nEmojiPicker.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  value: PropTypes.string,\r\n  setValue: PropTypes.func,\r\n  alignRight: PropTypes.bool\r\n};\r\n\r\nexport default function EmojiPicker({ disabled, value, setValue, alignRight = false, ...other }) {\r\n  const theme = useTheme();\r\n  const [emojiPickerState, SetEmojiPicker] = useState(false);\r\n\r\n  let emojiPicker;\r\n  if (emojiPickerState) {\r\n    emojiPicker = (\r\n      <Picker\r\n        color={theme.palette.primary.main}\r\n        title=\"Pick your emoji…\"\r\n        emoji=\"point_up\"\r\n        onSelect={(emoji) => setValue(value + emoji.native)}\r\n      />\r\n    );\r\n  }\r\n\r\n  const triggerPicker = (e) => {\r\n    e.preventDefault();\r\n    SetEmojiPicker(!emojiPickerState);\r\n  };\r\n\r\n  const handleClickAway = () => {\r\n    SetEmojiPicker(false);\r\n  };\r\n\r\n  return (\r\n    <ClickAwayListener onClickAway={handleClickAway}>\r\n      <RootStyle {...other}>\r\n        <PickerStyle\r\n          sx={{\r\n            ...(alignRight && {\r\n              right: -2,\r\n              left: 'auto !important'\r\n            })\r\n          }}\r\n        >\r\n          {emojiPicker}\r\n        </PickerStyle>\r\n        <IconButton disabled={disabled} size=\"small\" onClick={triggerPicker}>\r\n          <Icon icon={smilingFaceFill} width={20} height={20} />\r\n        </IconButton>\r\n      </RootStyle>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useEffect } from 'react';\r\nimport Lightbox from 'react-image-lightbox';\r\n// material\r\nimport { makeStyles, createStyles } from '@material-ui/styles';\r\nimport { alpha } from '@material-ui/core/styles';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst useStyles = makeStyles((theme) => {\r\n  const isRTL = theme.direction === 'rtl';\r\n\r\n  const backgroundIcon = (iconName) => ({\r\n    backgroundSize: '24px 24px',\r\n    backgroundPosition: 'center',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor: alpha(theme.palette.grey[900], 0.8),\r\n    backgroundImage: `url(\"/static/icons/controls/${iconName}.svg\")`\r\n  });\r\n\r\n  return createStyles({\r\n    root: {\r\n      backdropFilter: 'blur(8px)',\r\n      backgroundColor: alpha(theme.palette.grey[900], 0.88),\r\n\r\n      // Toolbar\r\n      '& .ril__toolbar': {\r\n        height: 'auto !important',\r\n        padding: theme.spacing(2, 3),\r\n        backgroundColor: 'transparent'\r\n      },\r\n      '& .ril__toolbarLeftSide': { display: 'none' },\r\n      '& .ril__toolbarRightSide': {\r\n        height: 'auto !important',\r\n        padding: 0,\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        '& li': {\r\n          display: 'flex',\r\n          alignItems: 'center'\r\n        },\r\n        '& li:first-of-type': {\r\n          flexGrow: 1\r\n        },\r\n        '& li:not(:first-of-type)': {\r\n          width: theme.spacing(5),\r\n          height: theme.spacing(5),\r\n          justifyContent: 'center',\r\n          marginLeft: theme.spacing(1),\r\n          borderRadius: theme.shape.borderRadius\r\n        }\r\n      },\r\n\r\n      // Button\r\n      '& button:focus': { outline: 'none' },\r\n      '& .ril__toolbarRightSide button': {\r\n        width: '100%',\r\n        height: '100%',\r\n        '&.ril__zoomInButton': backgroundIcon('maximize-outline'),\r\n        '&.ril__zoomOutButton': backgroundIcon('minimize-outline'),\r\n        '&.ril__closeButton': backgroundIcon('close')\r\n      },\r\n      '& .ril__navButtons': {\r\n        padding: theme.spacing(3),\r\n        borderRadius: theme.shape.borderRadiusSm,\r\n        '&.ril__navButtonPrev': {\r\n          left: theme.spacing(2),\r\n          right: 'auto',\r\n          ...backgroundIcon(isRTL ? 'arrow-ios-forward' : 'arrow-ios-back')\r\n        },\r\n        '&.ril__navButtonNext': {\r\n          right: theme.spacing(2),\r\n          left: 'auto',\r\n          ...backgroundIcon(isRTL ? 'arrow-ios-back' : 'arrow-ios-forward')\r\n        }\r\n      }\r\n    }\r\n  });\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nLightboxModal.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  photoIndex: PropTypes.number,\r\n  setPhotoIndex: PropTypes.func,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function LightboxModal({ images, photoIndex, setPhotoIndex, isOpen, onClose, ...other }) {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      document.body.style.overflow = 'hidden';\r\n    } else {\r\n      document.body.style.overflow = 'unset';\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const showIndex = <Typography variant=\"subtitle2\">{`${photoIndex + 1} / ${images.length}`}</Typography>;\r\n\r\n  const toolbarButtons = [showIndex];\r\n  const customStyles = {\r\n    overlay: {\r\n      zIndex: 9999\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <Lightbox\r\n          mainSrc={images[photoIndex]}\r\n          nextSrc={images[(photoIndex + 1) % images.length]}\r\n          prevSrc={images[(photoIndex + images.length - 1) % images.length]}\r\n          onCloseRequest={onClose}\r\n          onMovePrevRequest={() => setPhotoIndex((photoIndex + images.length - 1) % images.length)}\r\n          onMoveNextRequest={() => setPhotoIndex((photoIndex + 1) % images.length)}\r\n          toolbarButtons={toolbarButtons}\r\n          reactModalStyle={customStyles}\r\n          wrapperClassName={classes.root}\r\n          {...other}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport searchFill from '@iconify/icons-eva/search-fill';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box, FormControl, OutlinedInput, InputAdornment, ClickAwayListener } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  marginTop: theme.spacing(2)\r\n}));\r\n\r\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\r\n  transition: theme.transitions.create('box-shadow', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&.Mui-focused': { boxShadow: theme.customShadows.z8 },\r\n  '& fieldset': {\r\n    borderWidth: `1px !important`,\r\n    borderColor: `${theme.palette.grey[500_32]} !important`\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatContactSearch.propTypes = {\r\n  query: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  onFocus: PropTypes.func,\r\n  onClickAway: PropTypes.func\r\n};\r\n\r\nexport default function ChatContactSearch({ query, onChange, onFocus, onClickAway, ...other }) {\r\n  return (\r\n    <ClickAwayListener onClickAway={onClickAway}>\r\n      <RootStyle {...other}>\r\n        <FormControl fullWidth size=\"small\">\r\n          <SearchStyle\r\n            value={query}\r\n            onFocus={onFocus}\r\n            onChange={onChange}\r\n            placeholder=\"Search contacts...\"\r\n            startAdornment={\r\n              <InputAdornment position=\"start\">\r\n                <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\r\n              </InputAdornment>\r\n            }\r\n          />\r\n        </FormControl>\r\n      </RootStyle>\r\n    </ClickAwayListener>\r\n  );\r\n}\r\n","import { last } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, ListItemText, ListItemAvatar, ListItemButton } from '@material-ui/core';\r\n//\r\nimport BadgeStatus from '../../BadgeStatus';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst AVATAR_SIZE = 48;\r\nconst AVATAR_SIZE_GROUP = 32;\r\n\r\nconst RootStyle = styled(ListItemButton)(({ theme }) => ({\r\n  padding: theme.spacing(1.5, 3),\r\n  transition: theme.transitions.create('all')\r\n}));\r\n\r\nconst AvatarWrapperStyle = styled('div')({\r\n  position: 'relative',\r\n  width: AVATAR_SIZE,\r\n  height: AVATAR_SIZE,\r\n  '& .MuiAvatar-img': { borderRadius: '50%' },\r\n  '& .MuiAvatar-root': { width: '100%', height: '100%' }\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst getDetails = (conversation, currentUserId) => {\r\n  const otherParticipants = conversation.participants.filter((participant) => participant.id !== currentUserId);\r\n  const displayNames = otherParticipants.reduce((names, participant) => [...names, participant.name], []).join(', ');\r\n  let displayText = '';\r\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\r\n  if (lastMessage) {\r\n    const sender = lastMessage.senderId === currentUserId ? 'You: ' : '';\r\n    const message = lastMessage.contentType === 'image' ? 'Sent a photo' : lastMessage.body;\r\n    displayText = `${sender}${message}`;\r\n  }\r\n  return { otherParticipants, displayNames, displayText };\r\n};\r\n\r\nChatConversationItem.propTypes = {\r\n  isSelected: PropTypes.bool,\r\n  conversation: PropTypes.object.isRequired,\r\n  isOpenSidebar: PropTypes.bool,\r\n  onSelectConversation: PropTypes.func\r\n};\r\n\r\nexport default function ChatConversationItem({\r\n  isSelected,\r\n  conversation,\r\n  onSelectConversation,\r\n  isOpenSidebar,\r\n  ...other\r\n}) {\r\n  const details = getDetails(conversation, '8864c717-587d-472a-929a-8e5f298024da-0');\r\n\r\n  const displayLastActivity = last(conversation.messages).createdAt;\r\n  const isGroup = details.otherParticipants.length > 1;\r\n  const isUnread = conversation.unreadCount > 0;\r\n  const isOnlineGroup = isGroup && details.otherParticipants.map((item) => item.status).includes('online');\r\n\r\n  return (\r\n    <RootStyle\r\n      disableGutters\r\n      onClick={onSelectConversation}\r\n      sx={{\r\n        ...(isSelected && { bgcolor: 'action.selected' })\r\n      }}\r\n      {...other}\r\n    >\r\n      <ListItemAvatar>\r\n        <Box\r\n          sx={{\r\n            ...(isGroup && {\r\n              position: 'relative',\r\n              width: AVATAR_SIZE,\r\n              height: AVATAR_SIZE,\r\n              '& .avatarWrapper': {\r\n                position: 'absolute',\r\n                width: AVATAR_SIZE_GROUP,\r\n                height: AVATAR_SIZE_GROUP,\r\n                '&:nth-of-type(1)': {\r\n                  left: 0,\r\n                  zIndex: 9,\r\n                  bottom: 2,\r\n                  '& .MuiAvatar-root': {\r\n                    border: (theme) => `solid 2px ${theme.palette.background.paper}`\r\n                  }\r\n                },\r\n                '&:nth-of-type(2)': { top: 2, right: 0 }\r\n              }\r\n            })\r\n          }}\r\n        >\r\n          {details.otherParticipants.slice(0, 2).map((participant) => (\r\n            <AvatarWrapperStyle className=\"avatarWrapper\" key={participant._id}>\r\n              <Avatar alt={participant.name} src={participant.avatar} />\r\n              {!isGroup && (\r\n                <BadgeStatus status={participant.status} sx={{ right: 2, bottom: 2, position: 'absolute' }} />\r\n              )}\r\n            </AvatarWrapperStyle>\r\n          ))}\r\n          {isOnlineGroup && <BadgeStatus status=\"online\" sx={{ right: 2, bottom: 2, position: 'absolute' }} />}\r\n        </Box>\r\n      </ListItemAvatar>\r\n\r\n      {isOpenSidebar && (\r\n        <>\r\n          <ListItemText\r\n            primary={details.displayNames}\r\n            primaryTypographyProps={{\r\n              noWrap: true,\r\n              variant: 'subtitle2'\r\n            }}\r\n            secondary={details.displayText}\r\n            secondaryTypographyProps={{\r\n              noWrap: true,\r\n              variant: isUnread ? 'subtitle2' : 'body2',\r\n              color: isUnread ? 'textPrimary' : 'textSecondary'\r\n            }}\r\n          />\r\n\r\n          <Box\r\n            sx={{\r\n              ml: 2,\r\n              height: 44,\r\n              display: 'flex',\r\n              alignItems: 'flex-end',\r\n              flexDirection: 'column'\r\n            }}\r\n          >\r\n            <Box\r\n              sx={{\r\n                mb: 1.25,\r\n                fontSize: 12,\r\n                lineHeight: '22px',\r\n                whiteSpace: 'nowrap',\r\n                color: 'text.disabled'\r\n              }}\r\n            >\r\n              {formatDistanceToNowStrict(new Date(displayLastActivity), {\r\n                addSuffix: false\r\n              })}\r\n            </Box>\r\n            {isUnread && <BadgeStatus status=\"unread\" size=\"small\" />}\r\n          </Box>\r\n        </>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { useNavigate } from 'react-router-dom';\r\n// material\r\nimport { List } from '@material-ui/core';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport ChatConversationItem from './ChatConversationItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatConversationList.propTypes = {\r\n  conversations: PropTypes.object,\r\n  isOpenSidebar: PropTypes.bool,\r\n  activeConversationId: PropTypes.string\r\n};\r\n\r\nexport default function ChatConversationList({ conversations, isOpenSidebar, activeConversationId, ...other }) {\r\n  const navigate = useNavigate();\r\n\r\n  const handleSelectConversation = (conversationId) => {\r\n    let conversationKey = '';\r\n    const conversation = conversations.byId[conversationId];\r\n    if (conversation.type === 'GROUP') {\r\n      conversationKey = conversation._id;\r\n    } else {\r\n      const otherParticipant = conversation.participants.find(\r\n        (participant) => participant._id !== '8864c717-587d-472a-929a-8e5f298024da-0'\r\n      );\r\n      conversationKey = otherParticipant.username;\r\n    }\r\n    navigate(`${PATH_DASHBOARD.chat.root}/${conversationKey}`);\r\n  };\r\n\r\n  return (\r\n    <List disablePadding {...other}>\r\n      {conversations.allIds.map((conversationId) => (\r\n        <ChatConversationItem\r\n          key={conversationId}\r\n          isOpenSidebar={isOpenSidebar}\r\n          conversation={conversations.byId[conversationId]}\r\n          isSelected={activeConversationId === conversationId}\r\n          onSelectConversation={() => handleSelectConversation(conversationId)}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState } from 'react';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport match from 'autosuggest-highlight/match';\r\nimport checkmarkFill from '@iconify/icons-eva/checkmark-fill';\r\n// material\r\nimport { alpha, styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, TextField, Typography, Autocomplete, Chip } from '@material-ui/core';\r\n//\r\nimport SearchNotFound from '../../SearchNotFound';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(2, 3)\r\n}));\r\n\r\nconst AutocompleteStyle = styled('div')(({ theme }) => ({\r\n  '& .MuiAutocomplete-root': {\r\n    minWidth: 280,\r\n    marginLeft: theme.spacing(2),\r\n    '&.Mui-focused .MuiAutocomplete-inputRoot': {\r\n      boxShadow: theme.customShadows.z8\r\n    }\r\n  },\r\n  '& .MuiAutocomplete-inputRoot': {\r\n    transition: theme.transitions.create('box-shadow', {\r\n      easing: theme.transitions.easing.easeInOut,\r\n      duration: theme.transitions.duration.shorter\r\n    }),\r\n    '& fieldset': {\r\n      borderWidth: `1px !important`,\r\n      borderColor: `${theme.palette.grey[500_32]} !important`\r\n    }\r\n  }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatHeaderCompose.propTypes = {\r\n  contacts: PropTypes.array,\r\n  recipients: PropTypes.array,\r\n  onAddRecipient: PropTypes.func\r\n};\r\n\r\nexport default function ChatHeaderCompose({ contacts, recipients, onAddRecipient, ...other }) {\r\n  const [query, setQuery] = useState('');\r\n\r\n  const handleChangeQuery = (event) => {\r\n    setQuery(event.target.value);\r\n  };\r\n\r\n  const handleAddRecipient = (e, recipient) => {\r\n    setQuery('');\r\n    if (onAddRecipient) {\r\n      onAddRecipient(recipient);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <Typography variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\r\n        To:\r\n      </Typography>\r\n\r\n      <AutocompleteStyle>\r\n        <Autocomplete\r\n          multiple\r\n          size=\"small\"\r\n          disablePortal\r\n          popupIcon={null}\r\n          clearText={null}\r\n          noOptionsText={<SearchNotFound searchQuery={query} />}\r\n          onChange={handleAddRecipient}\r\n          onInputChange={handleChangeQuery}\r\n          options={contacts}\r\n          getOptionLabel={(recipient) => recipient.name}\r\n          renderOption={(props, recipient, { inputValue, selected }) => {\r\n            const { name, avatar } = recipient;\r\n            const matches = match(name, inputValue);\r\n            const parts = parse(name, matches);\r\n            return (\r\n              <li {...props}>\r\n                <Box\r\n                  sx={{\r\n                    width: 32,\r\n                    height: 32,\r\n                    overflow: 'hidden',\r\n                    borderRadius: '50%',\r\n                    position: 'relative'\r\n                  }}\r\n                >\r\n                  <Avatar alt={name} src={avatar} />\r\n                  <Box\r\n                    sx={{\r\n                      top: 0,\r\n                      opacity: 0,\r\n                      width: '100%',\r\n                      height: '100%',\r\n                      display: 'flex',\r\n                      position: 'absolute',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      bgcolor: (theme) => alpha(theme.palette.grey[900], 0.8),\r\n                      transition: (theme) =>\r\n                        theme.transitions.create('opacity', {\r\n                          easing: theme.transitions.easing.easeInOut,\r\n                          duration: theme.transitions.duration.shorter\r\n                        }),\r\n                      ...(selected && {\r\n                        opacity: 1,\r\n                        color: 'primary.main'\r\n                      })\r\n                    }}\r\n                  >\r\n                    <Icon icon={checkmarkFill} width={20} height={20} />\r\n                  </Box>\r\n                </Box>\r\n                <Box sx={{ ml: 2 }} />\r\n                {parts.map((part, index) => (\r\n                  <Typography key={index} variant=\"subtitle2\" color={part.highlight ? 'primary' : 'textPrimary'}>\r\n                    {part.text}\r\n                  </Typography>\r\n                ))}\r\n              </li>\r\n            );\r\n          }}\r\n          renderTags={(recipients, getTagProps) =>\r\n            recipients.map((recipient, index) => {\r\n              const { id, name, avatar } = recipient;\r\n              return (\r\n                <Chip\r\n                  key={id}\r\n                  size=\"small\"\r\n                  label={name}\r\n                  color=\"info\"\r\n                  avatar={<Avatar alt={name} src={avatar} />}\r\n                  {...getTagProps({ index })}\r\n                />\r\n              );\r\n            })\r\n          }\r\n          renderInput={(params) => <TextField {...params} placeholder={recipients.length === 0 ? 'Recipients' : ''} />}\r\n        />\r\n      </AutocompleteStyle>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { capitalCase } from 'change-case';\r\nimport videoFill from '@iconify/icons-eva/video-fill';\r\nimport phoneFill from '@iconify/icons-eva/phone-fill';\r\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box, Link, Avatar, Typography, AvatarGroup } from '@material-ui/core';\r\n// utils\r\nimport { fToNow } from '../../../utils/formatTime';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\nimport BadgeStatus from '../../BadgeStatus';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  flexShrink: 0,\r\n  minHeight: 92,\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  padding: theme.spacing(0, 3)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nOneAvatar.propTypes = {\r\n  participants: PropTypes.array\r\n};\r\n\r\nfunction OneAvatar({ participants }) {\r\n  const participant = [...participants][0];\r\n\r\n  if (participant === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n      <Box sx={{ position: 'relative' }}>\r\n        <Avatar src={participant.avatar} alt={participant.name} />\r\n        <BadgeStatus status={participant.status} sx={{ position: 'absolute', right: 2, bottom: 2 }} />\r\n      </Box>\r\n      <Box sx={{ ml: 2 }}>\r\n        <Typography variant=\"subtitle2\">{participant.name}</Typography>\r\n        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n          {participant.status !== 'offline' ? capitalCase(participant.status) : fToNow(participant.lastActivity)}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nGroupAvatar.propTypes = {\r\n  participants: PropTypes.array\r\n};\r\n\r\nfunction GroupAvatar({ participants }) {\r\n  return (\r\n    <div>\r\n      <AvatarGroup\r\n        max={3}\r\n        sx={{\r\n          mb: 0.5,\r\n          '& .MuiAvatar-root': { width: 32, height: 32 }\r\n        }}\r\n      >\r\n        {participants.map((participant) => (\r\n          <Avatar key={participant.id} alt={participant.name} src={participant.avatar} />\r\n        ))}\r\n      </AvatarGroup>\r\n      <Link variant=\"body2\" underline=\"none\" component=\"button\" color=\"text.secondary\" onClick={() => {}}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          {participants.length} persons\r\n          <Icon icon={arrowIosForwardFill} />\r\n        </Box>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nChatHeaderDetail.propTypes = {\r\n  participants: PropTypes.array\r\n};\r\n\r\nexport default function ChatHeaderDetail({ participants, ...other }) {\r\n  const isGroup = participants.length > 1;\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      {isGroup ? <GroupAvatar participants={participants} /> : <OneAvatar participants={participants} />}\r\n\r\n      <Box sx={{ flexGrow: 1 }} />\r\n      <MIconButton>\r\n        <Icon icon={phoneFill} width={20} height={20} />\r\n      </MIconButton>\r\n      <MIconButton>\r\n        <Icon icon={videoFill} width={20} height={20} />\r\n      </MIconButton>\r\n      <MIconButton>\r\n        <Icon icon={moreVerticalFill} width={20} height={20} />\r\n      </MIconButton>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useRef, useState } from 'react';\r\nimport micFill from '@iconify/icons-eva/mic-fill';\r\nimport roundSend from '@iconify/icons-ic/round-send';\r\nimport attach2Fill from '@iconify/icons-eva/attach-2-fill';\r\nimport roundAddPhotoAlternate from '@iconify/icons-ic/round-add-photo-alternate';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Input, Divider, IconButton, InputAdornment, Stack } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../../redux/store';\r\nimport {\r\n  addRecipients,\r\n  onSendMessage,\r\n  getConversation,\r\n  getParticipants,\r\n  markConversationAsRead,\r\n  resetActiveConversation\r\n} from '../../../redux/slices/chat';\r\nimport axios from '../../../utils/axios';\r\n// hooks\r\nimport useAuth from '../../../hooks/useAuth';\r\n//\r\nimport EmojiPicker from '../../EmojiPicker';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  minHeight: 56,\r\n  display: 'flex',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  paddingLeft: theme.spacing(2)\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatMessageInput.propTypes = {\r\n  disabled: PropTypes.bool,\r\n  conversationId: PropTypes.string,\r\n  onSend: PropTypes.func\r\n};\r\n\r\nexport default function ChatMessageInput({ disabled, conversationId, onSend, conversationKey, ...other }) {\r\n  const dispatch = useDispatch();\r\n  const fileInputRef = useRef(null);\r\n  const [message, setMessage] = useState('');\r\n  const { user } = useAuth();\r\n\r\n  const handleAttach = () => {\r\n    fileInputRef.current.click();\r\n  };\r\n\r\n  const handleChangeMessage = (event) => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const handleKeyUp = (event) => {\r\n    if (event.key === 'Enter') {\r\n      handleSend();\r\n    }\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!message) {\r\n      return '';\r\n    }\r\n    if (onSend) {\r\n      const accessToken = window.localStorage.getItem('accessToken');\r\n      const authHeader = {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`\r\n        }\r\n      };\r\n\r\n      onSend({\r\n        conversationId,\r\n        messageId: uuidv4(),\r\n        message,\r\n        contentType: 'text',\r\n        attachments: [],\r\n        createdAt: new Date(),\r\n        senderId: user\r\n      });\r\n\r\n      const resp = await axios.post(\r\n        '/chat/messages/new',\r\n        {\r\n          conversationId,\r\n          attachments: [],\r\n          message,\r\n          conversationKey\r\n        },\r\n        authHeader\r\n      );\r\n      dispatch(getConversation(resp.data.conversationKey));\r\n    }\r\n    return setMessage('');\r\n  };\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <Input\r\n        disabled={disabled}\r\n        fullWidth\r\n        value={message}\r\n        disableUnderline\r\n        onKeyUp={handleKeyUp}\r\n        onChange={handleChangeMessage}\r\n        placeholder=\"Type a message\"\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <EmojiPicker disabled={disabled} value={message} setValue={setMessage} />\r\n          </InputAdornment>\r\n        }\r\n        sx={{ height: '100%' }}\r\n      />\r\n\r\n      <Divider orientation=\"vertical\" flexItem />\r\n\r\n      <IconButton color=\"primary\" disabled={!message} onClick={handleSend} sx={{ mx: 1 }}>\r\n        <Icon icon={roundSend} width={24} height={24} />\r\n      </IconButton>\r\n\r\n      <input type=\"file\" ref={fileInputRef} style={{ display: 'none' }} />\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Avatar, Box, Typography } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  marginBottom: theme.spacing(3)\r\n}));\r\n\r\nconst ContentStyle = styled('div')(({ theme }) => ({\r\n  maxWidth: 320,\r\n  padding: theme.spacing(1.5),\r\n  marginTop: theme.spacing(0.5),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.neutral\r\n}));\r\n\r\nconst InfoStyle = styled(Typography)(({ theme }) => ({\r\n  display: 'flex',\r\n  marginBottom: theme.spacing(0.75),\r\n  color: theme.palette.text.secondary\r\n}));\r\n\r\nconst MessageImgStyle = styled('img')(({ theme }) => ({\r\n  height: 200,\r\n  minWidth: 296,\r\n  width: '100%',\r\n  cursor: 'pointer',\r\n  objectFit: 'cover',\r\n  borderRadius: theme.shape.borderRadius\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatMessageItem.propTypes = {\r\n  message: PropTypes.object.isRequired,\r\n  conversation: PropTypes.object.isRequired,\r\n  onOpenLightbox: PropTypes.func\r\n};\r\n\r\nexport default function ChatMessageItem({ message, conversation, onOpenLightbox, ...other }) {\r\n  console.log(message);\r\n  const sender = conversation.participants.find((participant) => participant._id === message.senderId._id);\r\n  const senderDetails =\r\n    message.senderId === '8864c717-587d-472a-929a-8e5f298024da-0'\r\n      ? { type: 'me' }\r\n      : { avatar: sender.avatarUrl, name: sender.name };\r\n\r\n  const isMe = senderDetails.type === 'me';\r\n  const isImage = message.contentType === 'image';\r\n  const firstName = senderDetails.name && senderDetails.name.split(' ')[0];\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          ...(isMe && {\r\n            ml: 'auto'\r\n          })\r\n        }}\r\n      >\r\n        {senderDetails.type !== 'me' && (\r\n          <Avatar alt={senderDetails.name} src={senderDetails.avatar} sx={{ width: 32, height: 32 }} />\r\n        )}\r\n\r\n        <Box sx={{ ml: 2 }}>\r\n          <InfoStyle noWrap variant=\"caption\" sx={{ ...(isMe && { justifyContent: 'flex-end' }) }}>\r\n            {!isMe && `${firstName},`}&nbsp;\r\n            {formatDistanceToNowStrict(new Date(message.createdAt), {\r\n              addSuffix: true\r\n            })}\r\n          </InfoStyle>\r\n\r\n          <ContentStyle\r\n            sx={{\r\n              ...(isMe && {\r\n                color: 'grey.800',\r\n                bgcolor: 'primary.lighter'\r\n              })\r\n            }}\r\n          >\r\n            {isImage ? (\r\n              <MessageImgStyle alt=\"attachment\" src={message.body} onClick={() => onOpenLightbox(message.body)} />\r\n            ) : (\r\n              <Typography variant=\"body2\">{message.body}</Typography>\r\n            )}\r\n          </ContentStyle>\r\n        </Box>\r\n      </Box>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { findIndex } from 'lodash';\r\nimport { useEffect, useState, useRef } from 'react';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\nimport LightboxModal from '../../LightboxModal';\r\nimport ChatMessageItem from './ChatMessageItem';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatMessageList.propTypes = {\r\n  conversation: PropTypes.object.isRequired\r\n};\r\n\r\nexport default function ChatMessageList({ conversation }) {\r\n  const scrollRef = useRef();\r\n  const [openLightbox, setOpenLightbox] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const scrollMessagesToBottom = () => {\r\n      if (scrollRef.current) {\r\n        scrollRef.current.scrollTop = scrollRef.current.scrollHeight;\r\n      }\r\n    };\r\n    scrollMessagesToBottom();\r\n  }, [conversation.messages]);\r\n\r\n  const images = conversation.messages\r\n    .filter((messages) => messages.contentType === 'image')\r\n    .map((messages) => messages.body);\r\n\r\n  const handleOpenLightbox = (url) => {\r\n    const selectedImage = findIndex(images, (index) => index === url);\r\n    setOpenLightbox(true);\r\n    setSelectedImage(selectedImage);\r\n  };\r\n\r\n  return (\r\n    <Scrollbar scrollableNodeProps={{ ref: scrollRef }} sx={{ p: 3, flexGrow: 1 }}>\r\n      {conversation.messages.map((message) => (\r\n        <ChatMessageItem\r\n          key={message._id}\r\n          message={message}\r\n          conversation={conversation}\r\n          onOpenLightbox={handleOpenLightbox}\r\n        />\r\n      ))}\r\n\r\n      <LightboxModal\r\n        images={images}\r\n        photoIndex={selectedImage}\r\n        setPhotoIndex={setSelectedImage}\r\n        isOpen={openLightbox}\r\n        onClose={() => setOpenLightbox(false)}\r\n      />\r\n    </Scrollbar>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { uniq, flatten } from 'lodash';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box, Button, Divider, Collapse, Typography } from '@material-ui/core';\r\n// utils\r\nimport { fDateTime } from '../../../utils/formatTime';\r\nimport { getFileFullName, getFileThumb } from '../../../utils/getFileFormat';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  flexGrow: 1,\r\n  height: '100%',\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  flexDirection: 'column',\r\n  paddingBottom: theme.spacing(2)\r\n}));\r\n\r\nconst FileItemStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  marginTop: theme.spacing(2),\r\n  padding: theme.spacing(0, 2.5)\r\n}));\r\n\r\nconst FileThumbStyle = styled('div')(({ theme }) => ({\r\n  width: 40,\r\n  height: 40,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  color: theme.palette.text.secondary,\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.grey[500_16]\r\n}));\r\n\r\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\r\n  ...theme.typography.overline,\r\n  height: 40,\r\n  flexShrink: 0,\r\n  borderRadius: 0,\r\n  padding: theme.spacing(1, 2),\r\n  justifyContent: 'space-between',\r\n  color: theme.palette.text.disabled\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nAttachmentItem.propTypes = {\r\n  file: PropTypes.object,\r\n  fileUrl: PropTypes.string\r\n};\r\n\r\nfunction AttachmentItem({ file, fileUrl }) {\r\n  return (\r\n    <FileItemStyle key={fileUrl}>\r\n      <FileThumbStyle>{getFileThumb(fileUrl)}</FileThumbStyle>\r\n      <Box sx={{ ml: 1.5, maxWidth: 150 }}>\r\n        <Typography variant=\"body2\" noWrap>\r\n          {getFileFullName(fileUrl)}\r\n        </Typography>\r\n        <Typography noWrap variant=\"caption\" sx={{ color: 'text.secondary', display: 'block' }}>\r\n          {fDateTime(file.createdAt)}\r\n        </Typography>\r\n      </Box>\r\n    </FileItemStyle>\r\n  );\r\n}\r\n\r\nChatRoomAttachment.propTypes = {\r\n  conversation: PropTypes.object.isRequired,\r\n  isCollapse: PropTypes.bool,\r\n  onCollapse: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomAttachment({ conversation, isCollapse, onCollapse, ...other }) {\r\n  const totalAttachment = uniq(flatten(conversation.messages.map((item) => item.attachments))).length;\r\n\r\n  return (\r\n    <RootStyle {...other}>\r\n      <CollapseButtonStyle\r\n        fullWidth\r\n        color=\"inherit\"\r\n        onClick={onCollapse}\r\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\r\n      >\r\n        attachment ({totalAttachment})\r\n      </CollapseButtonStyle>\r\n\r\n      {!isCollapse && <Divider />}\r\n\r\n      <Scrollbar>\r\n        <Collapse in={isCollapse}>\r\n          {conversation.messages.map((file) => (\r\n            <div key={file.id}>\r\n              {file.attachments.map((fileUrl) => (\r\n                <AttachmentItem key={fileUrl} file={file} fileUrl={fileUrl} />\r\n              ))}\r\n            </div>\r\n          ))}\r\n        </Collapse>\r\n      </Scrollbar>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport pinFill from '@iconify/icons-eva/pin-fill';\r\nimport phoneFill from '@iconify/icons-eva/phone-fill';\r\nimport emailFill from '@iconify/icons-eva/email-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box, Avatar, Button, Divider, Collapse, Typography, Stack } from '@material-ui/core';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\r\n  ...theme.typography.overline,\r\n  height: 40,\r\n  borderRadius: 0,\r\n  padding: theme.spacing(1, 2),\r\n  justifyContent: 'space-between',\r\n  color: theme.palette.text.disabled\r\n}));\r\n\r\nconst RowIconStyle = styled(Icon)(({ theme }) => ({\r\n  width: 16,\r\n  height: 16,\r\n  marginTop: 4,\r\n  color: theme.palette.text.secondary\r\n}));\r\n\r\nconst RowTextStyle = styled(Typography)(({ theme }) => ({\r\n  flexGrow: 1,\r\n  maxWidth: 160,\r\n  wordWrap: 'break-word',\r\n  ...theme.typography.body2\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatRoomOneParticipant.propTypes = {\r\n  participants: PropTypes.array.isRequired,\r\n  isCollapse: PropTypes.bool,\r\n  onCollapse: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomOneParticipant({ participants, isCollapse, onCollapse, ...other }) {\r\n  const participant = [...participants][0];\r\n\r\n  if (participant === undefined) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <Box {...other}>\r\n      <Box\r\n        sx={{\r\n          pt: 4,\r\n          pb: 3,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          flexDirection: 'column'\r\n        }}\r\n      >\r\n        <Avatar alt={participant.name} src={participant.avatar} sx={{ width: 96, height: 96 }} />\r\n        <Box sx={{ mt: 2, textAlign: 'center' }}>\r\n          <Typography variant=\"subtitle1\">{participant.name}</Typography>\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            {participant.position}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Divider />\r\n\r\n      <CollapseButtonStyle\r\n        fullWidth\r\n        color=\"inherit\"\r\n        onClick={onCollapse}\r\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\r\n      >\r\n        information\r\n      </CollapseButtonStyle>\r\n\r\n      <Collapse in={isCollapse}>\r\n        <Stack spacing={2} sx={{ p: 2.5, pt: 1 }}>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <RowIconStyle icon={pinFill} />\r\n            <RowTextStyle>{participant.address}</RowTextStyle>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <RowIconStyle icon={phoneFill} />\r\n            <RowTextStyle>{participant.phone}</RowTextStyle>\r\n          </Stack>\r\n          <Stack direction=\"row\" spacing={1}>\r\n            <RowIconStyle icon={emailFill} />\r\n            <RowTextStyle>{participant.email}</RowTextStyle>\r\n          </Stack>\r\n        </Stack>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport pinFill from '@iconify/icons-eva/pin-fill';\r\nimport phoneFill from '@iconify/icons-eva/phone-fill';\r\nimport emailFill from '@iconify/icons-eva/email-fill';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Avatar, Typography, DialogContent } from '@material-ui/core';\r\n//\r\nimport { DialogAnimate } from '../../animate';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RowStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  marginTop: theme.spacing(1.5)\r\n}));\r\n\r\nconst IconStyle = styled(Icon)(({ theme }) => ({\r\n  width: 16,\r\n  height: 16,\r\n  marginRight: theme.spacing(1),\r\n  color: theme.palette.text.secondary\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatRoomPopup.propTypes = {\r\n  participant: PropTypes.object,\r\n  isOpen: PropTypes.bool,\r\n  onClose: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomPopup({ participant, isOpen, onClose, ...other }) {\r\n  const { name, avatar, position, address, phone, email } = participant;\r\n\r\n  return (\r\n    <DialogAnimate fullWidth maxWidth=\"xs\" open={isOpen} onClose={onClose} {...other}>\r\n      <DialogContent sx={{ pb: 5, textAlign: 'center' }}>\r\n        <Avatar\r\n          alt={name}\r\n          src={avatar}\r\n          sx={{\r\n            mt: 5,\r\n            mb: 2,\r\n            mx: 'auto',\r\n            width: 96,\r\n            height: 96\r\n          }}\r\n        />\r\n        <Typography variant=\"h6\">{name}</Typography>\r\n        <Typography variant=\"body2\" paragraph sx={{ color: 'text.secondary' }}>\r\n          {position}\r\n        </Typography>\r\n\r\n        <RowStyle>\r\n          <IconStyle icon={pinFill} />\r\n          <Typography variant=\"body2\">{address}</Typography>\r\n        </RowStyle>\r\n        <RowStyle>\r\n          <IconStyle icon={phoneFill} />\r\n          <Typography variant=\"body2\">{phone}</Typography>\r\n        </RowStyle>\r\n        <RowStyle>\r\n          <IconStyle icon={emailFill} />\r\n          <Typography variant=\"body2\">{email}</Typography>\r\n        </RowStyle>\r\n      </DialogContent>\r\n    </DialogAnimate>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\nimport arrowIosDownwardFill from '@iconify/icons-eva/arrow-ios-downward-fill';\r\n// material\r\nimport { styled } from '@material-ui/core/styles';\r\nimport { Box, List, Avatar, Button, Collapse, ListItemText, ListItemAvatar, ListItemButton } from '@material-ui/core';\r\n//\r\nimport Scrollbar from '../../Scrollbar';\r\nimport BadgeStatus from '../../BadgeStatus';\r\nimport ChatRoomPopup from './ChatRoomPopup';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst HEIGHT = 64;\r\n\r\nconst CollapseButtonStyle = styled(Button)(({ theme }) => ({\r\n  ...theme.typography.overline,\r\n  height: 40,\r\n  borderRadius: 0,\r\n  padding: theme.spacing(1, 2),\r\n  justifyContent: 'space-between',\r\n  color: theme.palette.text.disabled\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nParticipant.propTypes = {\r\n  participant: PropTypes.object.isRequired,\r\n  isOpen: PropTypes.bool,\r\n  onClosePopup: PropTypes.func,\r\n  onShowPopup: PropTypes.func\r\n};\r\n\r\nfunction Participant({ participant, isOpen, onClosePopup, onShowPopup }) {\r\n  const { name, avatar, status, position } = participant;\r\n\r\n  return (\r\n    <>\r\n      <ListItemButton disableGutters onClick={onShowPopup} sx={{ height: HEIGHT, px: 2.5 }}>\r\n        <ListItemAvatar>\r\n          <Box sx={{ position: 'relative', width: 40, height: 40 }}>\r\n            <Avatar alt={name} src={avatar} />\r\n            <BadgeStatus status={status} sx={{ right: 0, bottom: 0, position: 'absolute' }} />\r\n          </Box>\r\n        </ListItemAvatar>\r\n        <ListItemText\r\n          primary={name}\r\n          secondary={position}\r\n          primaryTypographyProps={{ variant: 'subtitle2', noWrap: true }}\r\n          secondaryTypographyProps={{ noWrap: true }}\r\n        />\r\n      </ListItemButton>\r\n      <ChatRoomPopup participant={participant} isOpen={isOpen} onClose={onClosePopup} />\r\n    </>\r\n  );\r\n}\r\n\r\nChatRoomGroupParticipant.propTypes = {\r\n  participants: PropTypes.array.isRequired,\r\n  selectUserId: PropTypes.string,\r\n  onShowPopupUserInfo: PropTypes.func,\r\n  isCollapse: PropTypes.bool,\r\n  onCollapse: PropTypes.func\r\n};\r\n\r\nexport default function ChatRoomGroupParticipant({\r\n  participants,\r\n  selectUserId,\r\n  onShowPopupUserInfo,\r\n  isCollapse,\r\n  onCollapse,\r\n  ...other\r\n}) {\r\n  return (\r\n    <Box {...other}>\r\n      <CollapseButtonStyle\r\n        fullWidth\r\n        disableRipple\r\n        color=\"inherit\"\r\n        onClick={onCollapse}\r\n        endIcon={<Icon icon={isCollapse ? arrowIosDownwardFill : arrowIosForwardFill} width={16} height={16} />}\r\n      >\r\n        In room ({participants.length})\r\n      </CollapseButtonStyle>\r\n\r\n      <Box sx={{ height: isCollapse ? HEIGHT * 4 : 0 }}>\r\n        <Scrollbar>\r\n          <Collapse in={isCollapse}>\r\n            <List disablePadding>\r\n              {participants.map((participant) => (\r\n                <Participant\r\n                  key={participant.id}\r\n                  participant={participant}\r\n                  isOpen={selectUserId === participant.id}\r\n                  onShowPopup={() => onShowPopupUserInfo(participant.id)}\r\n                  onClosePopup={() => onShowPopupUserInfo(null)}\r\n                />\r\n              ))}\r\n            </List>\r\n          </Collapse>\r\n        </Scrollbar>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useState, useEffect } from 'react';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { useMediaQuery, Divider, IconButton } from '@material-ui/core';\r\n//\r\nimport ChatRoomAttachment from './ChatRoomAttachment';\r\nimport ChatRoomOneParticipant from './ChatRoomOneParticipant';\r\nimport ChatRoomGroupParticipant from './ChatRoomGroupParticipant';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  width: 240,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  position: 'relative',\r\n  flexDirection: 'column',\r\n  borderLeft: `solid 1px ${theme.palette.divider}`,\r\n  transition: theme.transitions.create('width')\r\n}));\r\n\r\nconst ToggleButtonStyle = styled('div')(({ theme }) => ({\r\n  borderRight: 0,\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  position: 'absolute',\r\n  alignItems: 'center',\r\n  top: theme.spacing(1),\r\n  left: theme.spacing(-4),\r\n  width: theme.spacing(4),\r\n  height: theme.spacing(4),\r\n  justifyContent: 'center',\r\n  boxShadow: theme.customShadows.z8,\r\n  border: `solid 1px ${theme.palette.divider}`,\r\n  borderTopLeftRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.paper,\r\n  borderBottomLeftRadius: theme.shape.borderRadius\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatRoom.propTypes = {\r\n  conversation: PropTypes.object.isRequired,\r\n  participants: PropTypes.array.isRequired\r\n};\r\n\r\nexport default function ChatRoom({ conversation, participants, ...other }) {\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n  const [showInfo, setShowInfo] = useState(true);\r\n  const [selectUser, setSelectUser] = useState(null);\r\n  const [showAttachment, setShowAttachment] = useState(true);\r\n  const [showParticipants, setShowParticipants] = useState(true);\r\n  const isGroup = participants.length > 1;\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      return setOpenSidebar(false);\r\n    }\r\n    return setOpenSidebar(true);\r\n  }, [isMobile]);\r\n\r\n  return (\r\n    <RootStyle\r\n      sx={{\r\n        ...(!openSidebar && {\r\n          width: 0,\r\n          '& > *': { overflow: 'hidden' }\r\n        })\r\n      }}\r\n      {...other}\r\n    >\r\n      <ToggleButtonStyle>\r\n        <IconButton onClick={() => setOpenSidebar(!openSidebar)}>\r\n          <Icon width={16} height={16} icon={openSidebar ? arrowIosForwardFill : arrowIosBackFill} />\r\n        </IconButton>\r\n      </ToggleButtonStyle>\r\n\r\n      {isGroup ? (\r\n        <ChatRoomGroupParticipant\r\n          selectUserId={selectUser}\r\n          participants={participants}\r\n          isCollapse={showParticipants}\r\n          onShowPopupUserInfo={(participantId) => setSelectUser(participantId)}\r\n          onCollapse={() => setShowParticipants((prev) => !prev)}\r\n        />\r\n      ) : (\r\n        <ChatRoomOneParticipant\r\n          participants={participants}\r\n          isCollapse={showInfo}\r\n          onCollapse={() => setShowInfo((prev) => !prev)}\r\n        />\r\n      )}\r\n      <Divider />\r\n\r\n      {/* <ChatRoomAttachment\r\n        conversation={conversation}\r\n        isCollapse={showAttachment}\r\n        onCollapse={() => setShowAttachment((prev) => !prev)}\r\n      /> */}\r\n    </RootStyle>\r\n  );\r\n}\r\n","import PropTypes from 'prop-types';\r\n// material\r\nimport { List, Avatar, Typography, ListItemText, ListItemAvatar, ListItemButton } from '@material-ui/core';\r\n//\r\nimport SearchNotFound from '../../SearchNotFound';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatSearchResults.propTypes = {\r\n  query: PropTypes.string,\r\n  results: PropTypes.array,\r\n  onSelectContact: PropTypes.func\r\n};\r\n\r\nexport default function ChatSearchResults({ query, results, onSelectContact }) {\r\n  const isFound = results.length > 0;\r\n\r\n  return (\r\n    <>\r\n      <Typography paragraph variant=\"subtitle1\" sx={{ px: 3, color: 'text.secondary' }}>\r\n        Contacts\r\n      </Typography>\r\n\r\n      <List disablePadding>\r\n        {results.map((result) => (\r\n          <ListItemButton\r\n            key={result._id}\r\n            onClick={() => onSelectContact(result)}\r\n            sx={{\r\n              py: 1.5,\r\n              px: 3\r\n            }}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar alt={result.name} src={result.avatar} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={result.name}\r\n              primaryTypographyProps={{\r\n                noWrap: true,\r\n                variant: 'subtitle2'\r\n              }}\r\n            />\r\n          </ListItemButton>\r\n        ))}\r\n      </List>\r\n      {!isFound && (\r\n        <SearchNotFound\r\n          searchQuery={query}\r\n          sx={{\r\n            p: 3,\r\n            mx: 'auto',\r\n            width: `calc(100% - 48px)`,\r\n            bgcolor: 'background.neutral'\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { Icon } from '@iconify/react';\r\nimport { useState, useEffect } from 'react';\r\nimport editFill from '@iconify/icons-eva/edit-fill';\r\n\r\nimport { useNavigate, Link as RouterLink } from 'react-router-dom';\r\nimport arrowIosBackFill from '@iconify/icons-eva/arrow-ios-back-fill';\r\nimport arrowIosForwardFill from '@iconify/icons-eva/arrow-ios-forward-fill';\r\n// material\r\nimport { useTheme, styled } from '@material-ui/core/styles';\r\nimport { Box, useMediaQuery } from '@material-ui/core';\r\n// redux\r\nimport { useSelector } from '../../../redux/store';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport { MIconButton } from '../../@material-extend';\r\nimport Scrollbar from '../../Scrollbar';\r\nimport ChatAccount from './ChatAccount';\r\nimport ChatSearchResults from './ChatSearchResults';\r\nimport ChatContactSearch from './ChatContactSearch';\r\nimport ChatConversationList from './ChatConversationList';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  width: 320,\r\n  flexShrink: 0,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  transition: theme.transitions.create('width'),\r\n  borderRight: `1px solid ${theme.palette.divider}`\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ChatSidebar() {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [openSidebar, setOpenSidebar] = useState(true);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [isSearchFocused, setSearchFocused] = useState(false);\r\n  const displayResults = searchQuery && isSearchFocused;\r\n  const { conversations, activeConversationId } = useSelector((state) => state.chat);\r\n  console.log(activeConversationId);\r\n\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      return setOpenSidebar(false);\r\n    }\r\n    return setOpenSidebar(true);\r\n  }, [isMobile]);\r\n\r\n  // eslint-disable-next-line consistent-return\r\n  useEffect(() => {\r\n    if (!openSidebar) {\r\n      return setSearchFocused(false);\r\n    }\r\n  }, [openSidebar]);\r\n\r\n  const handleClickAwaySearch = () => {\r\n    setSearchFocused(false);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const handleChangeSearch = async (event) => {\r\n    try {\r\n      const { value } = event.target;\r\n      setSearchQuery(value);\r\n      if (value) {\r\n        const response = await axios.get('/chat/search', {\r\n          params: { query: value }\r\n        });\r\n        setSearchResults(response.data.results);\r\n      } else {\r\n        setSearchResults([]);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const handleSearchFocus = () => {\r\n    setSearchFocused(true);\r\n  };\r\n\r\n  const handleSearchSelect = (username) => {\r\n    setSearchFocused(false);\r\n    setSearchQuery('');\r\n    navigate(`${PATH_DASHBOARD.chat.root}/${username}`);\r\n  };\r\n\r\n  const handleSelectContact = (result) => {\r\n    if (handleSearchSelect) {\r\n      handleSearchSelect(result.username);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <RootStyle sx={{ ...(!openSidebar && { width: 96 }) }}>\r\n      <Box sx={{ py: 2, px: 3 }}>\r\n        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n          {openSidebar && (\r\n            <>\r\n              <Box sx={{ flexGrow: 1 }} />\r\n            </>\r\n          )}\r\n\r\n          <MIconButton onClick={() => setOpenSidebar(!openSidebar)}>\r\n            <Icon width={20} height={20} icon={openSidebar ? arrowIosBackFill : arrowIosForwardFill} />\r\n          </MIconButton>\r\n        </Box>\r\n\r\n        {openSidebar && (\r\n          <ChatContactSearch\r\n            query={searchQuery}\r\n            onFocus={handleSearchFocus}\r\n            onChange={handleChangeSearch}\r\n            onClickAway={handleClickAwaySearch}\r\n          />\r\n        )}\r\n      </Box>\r\n\r\n      <Scrollbar>\r\n        {!displayResults ? (\r\n          <ChatConversationList\r\n            conversations={conversations}\r\n            isOpenSidebar={openSidebar}\r\n            activeConversationId={activeConversationId}\r\n            sx={{ ...(isSearchFocused && { display: 'none' }) }}\r\n          />\r\n        ) : (\r\n          <ChatSearchResults query={searchQuery} results={searchResults} onSelectContact={handleSelectContact} />\r\n        )}\r\n      </Scrollbar>\r\n    </RootStyle>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { useNavigate, useParams, useLocation } from 'react-router-dom';\r\n// material\r\nimport { Box, Divider } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../../redux/store';\r\nimport {\r\n  addRecipients,\r\n  onSendMessage,\r\n  getConversation,\r\n  getParticipants,\r\n  markConversationAsRead,\r\n  resetActiveConversation\r\n} from '../../../redux/slices/chat';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport ChatRoom from './ChatRoom';\r\nimport ChatMessageList from './ChatMessageList';\r\nimport ChatHeaderDetail from './ChatHeaderDetail';\r\nimport ChatMessageInput from './ChatMessageInput';\r\nimport ChatHeaderCompose from './ChatHeaderCompose';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst conversationSelector = (state) => {\r\n  const { conversations, activeConversationId } = state.chat;\r\n  const conversation = conversations.byId[activeConversationId];\r\n  if (conversation) {\r\n    return conversation;\r\n  }\r\n  return {\r\n    id: null,\r\n    messages: [],\r\n    participants: [],\r\n    unreadMessages: 0\r\n  };\r\n};\r\n\r\nexport default function ChatWindow() {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const { pathname } = useLocation();\r\n  const { conversationKey } = useParams();\r\n  const { contacts, recipients, participants, activeConversationId } = useSelector((state) => state.chat);\r\n  const conversation = useSelector((state) => conversationSelector(state));\r\n  const mode = conversationKey ? 'DETAIL' : 'COMPOSE';\r\n\r\n  const displayParticipants = participants.filter((item) => item._id !== '8864c717-587d-472a-929a-8e5f298024da-0');\r\n\r\n  useEffect(() => {\r\n    const getDetails = async () => {\r\n      dispatch(getParticipants(conversationKey));\r\n      try {\r\n        dispatch(getConversation(conversationKey));\r\n      } catch (error) {\r\n        console.error(error);\r\n        navigate(PATH_DASHBOARD.chat.new);\r\n      }\r\n    };\r\n    if (conversationKey) {\r\n      getDetails();\r\n    } else if (activeConversationId) {\r\n      dispatch(resetActiveConversation());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [conversationKey]);\r\n\r\n  useEffect(() => {\r\n    if (activeConversationId) {\r\n      dispatch(markConversationAsRead(activeConversationId));\r\n    }\r\n  }, [dispatch, activeConversationId]);\r\n\r\n  const handleAddRecipient = (recipient) => {\r\n    dispatch(addRecipients(recipient));\r\n  };\r\n\r\n  const handleSendMessage = async (value) => {\r\n    try {\r\n      dispatch(onSendMessage(value));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column' }}>\r\n      {mode === 'DETAIL' ? (\r\n        <ChatHeaderDetail participants={displayParticipants} />\r\n      ) : (\r\n        <ChatHeaderCompose\r\n          recipients={recipients}\r\n          contacts={Object.values(contacts.byId)}\r\n          onAddRecipient={handleAddRecipient}\r\n        />\r\n      )}\r\n\r\n      <Divider />\r\n\r\n      <Box sx={{ flexGrow: 1, display: 'flex', overflow: 'hidden' }}>\r\n        <Box sx={{ display: 'flex', flexGrow: 1, flexDirection: 'column' }}>\r\n          <ChatMessageList conversation={conversation} />\r\n\r\n          <Divider />\r\n\r\n          <ChatMessageInput\r\n            conversationId={activeConversationId}\r\n            conversationKey={conversationKey}\r\n            onSend={handleSendMessage}\r\n            disabled={pathname === PATH_DASHBOARD.chat.new}\r\n          />\r\n        </Box>\r\n\r\n        {mode === 'DETAIL' && <ChatRoom conversation={conversation} participants={displayParticipants} />}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\nimport fakeRequest from '../../../utils/fakeRequest';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nChatAdminMessageForm.propTypes = {\r\n  chatSettings: PropTypes.object\r\n};\r\n\r\nexport default function ChatAdminMessageForm({ chatSettings }) {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const ChatAdminMessageSchema = Yup.object().shape({\r\n    admin_message: Yup.string().required('This field is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      admin_message:\r\n        chatSettings?.settings.admin_message ||\r\n        'Please leave a message, I will reply to you as soon as possible. You may talk about anything: advertising, complaining, suggestions, advice, cooperation, etc.'\r\n    },\r\n    validationSchema: ChatAdminMessageSchema,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n\r\n        await axios.put(`/settings/chat`, values);\r\n\r\n        setSubmitting(false);\r\n        enqueueSnackbar('Update success', { variant: 'success' });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Admin Message\"\r\n                    multiline\r\n                    minRows={2}\r\n                    maxRows={4}\r\n                    {...getFieldProps('admin_message')}\r\n                    error={Boolean(touched.message && errors.message)}\r\n                    helperText={touched.message && errors.message}\r\n                  />\r\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                    Save\r\n                  </LoadingButton>\r\n                </Stack>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\n// material\r\nimport { Card, Container } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getConversations, getContacts } from '../../redux/slices/chat';\r\nimport { getSettingsList } from '../../redux/slices/settings';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport { ChatSidebar, ChatWindow, ChatAdminMessageForm } from '../../components/_dashboard/chat';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function Chat() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  const { settingsList } = useSelector((state) => state.setting);\r\n  const chatSettings = settingsList.find((settingRow) => settingRow.type === 'chat');\r\n\r\n  useEffect(() => {\r\n    dispatch(getConversations());\r\n    dispatch(getContacts());\r\n    dispatch(getSettingsList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Chat | Locals\">\r\n      <Container maxWidth={themeStretch ? false : 'xl'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Chat\"\r\n          links={[{ name: 'Dashboard', href: PATH_DASHBOARD.root }, { name: 'Chat' }]}\r\n        />\r\n        <ChatAdminMessageForm chatSettings={chatSettings} />\r\n        <Card sx={{ height: '72vh', display: 'flex' }}>\r\n          <ChatSidebar />\r\n          <ChatWindow />\r\n        </Card>\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}