{"version":3,"sources":["utils/formatNumber.js","components/HeaderBreadcrumbs.js","utils/fakeRequest.js","components/upload/UploadMultiFile.js","components/upload/UploadSingleFile.js","components/upload/UploadAvatar.js","components/_dashboard/settings/ParameterSettingsForm.js","pages/dashboard/ParameterSettings.js"],"names":["fCurrency","number","numeral","format","Number","isInteger","fNumber","fShortenNumber","replace","fData","HeaderBreadcrumbs","links","action","heading","moreLink","sx","other","mb","display","alignItems","flexGrow","variant","gutterBottom","flexShrink","mt","isString","href","target","map","noWrap","fakeRequest","time","Promise","res","setTimeout","styled","theme","outline","textAlign","flexDirection","justifyContent","padding","spacing","borderRadius","shape","backgroundColor","palette","background","neutral","border","grey","opacity","cursor","breakpoints","up","overflow","position","transition","transitions","create","RootStyle","width","height","margin","DropZoneStyle","zIndex","PlaceholderStyle","color","text","secondary","easing","easeInOut","duration","shorter","UploadAvatar","error","file","caption","useDropzone","multiple","getRootProps","getInputProps","isDragActive","isDragReject","fileRejections","ShowRejectionItems","Paper","py","px","my","borderColor","bgcolor","alpha","main","errors","path","size","Box","Typography","e","component","message","code","alt","src","preview","objectFit","className","Icon","icon","roundAddAPhoto","length","ParameterSettingsForm","settingsData","enqueueSnackbar","useNavigate","useSnackbar","itemValidation","Yup","refresh_location_time_interval","required","top_information_online_hour","downloads_message_num","message_limit_character_num","domain_name","app_use_hour","top_message_num","top_message_save_hour","default_coverage","banned_hour","formik","useFormik","enableReinitialize","initialValues","settings","admin_mail_address","online_chat_admin_email","message_save_hour","validationSchema","onSubmit","values","a","setSubmitting","resetForm","setErrors","axios","put","console","touched","handleSubmit","isSubmitting","getFieldProps","setFieldValue","value","noValidate","autoComplete","Grid","container","item","xs","md","Card","p","Stack","direction","sm","style","lineHeight","TextField","Boolean","helperText","LoadingButton","type","loading","ParameterSettings","themeStretch","useSettings","dispatch","useDispatch","parameterSettings","useSelector","state","setting","settingsList","find","settingRow","useEffect","getSettingsList","Page","title","Container","maxWidth","name","PATH_DASHBOARD","root","parameters"],"mappings":"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","file":"static/js/22.0628c60a.chunk.js","sourcesContent":["import { replace } from 'lodash';\r\nimport numeral from 'numeral';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function fCurrency(number) {\r\n  return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\r\n}\r\n\r\nexport function fPercent(number) {\r\n  return numeral(number / 100).format('0.0%');\r\n}\r\n\r\nexport function fNumber(number) {\r\n  return numeral(number).format();\r\n}\r\n\r\nexport function fShortenNumber(number) {\r\n  return replace(numeral(number).format('0.00a'), '.00', '');\r\n}\r\n\r\nexport function fData(number) {\r\n  return numeral(number).format('0.0 b');\r\n}\r\n","import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\n// material\r\nimport { Box, Typography, Link } from '@material-ui/core';\r\n//\r\nimport { MBreadcrumbs } from './@material-extend';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nHeaderBreadcrumbs.propTypes = {\r\n  links: PropTypes.array,\r\n  action: PropTypes.node,\r\n  heading: PropTypes.string.isRequired,\r\n  moreLink: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function HeaderBreadcrumbs({ links, action, heading, moreLink = '' || [], sx, ...other }) {\r\n  return (\r\n    <Box sx={{ mb: 5, ...sx }}>\r\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            {heading}\r\n          </Typography>\r\n          <MBreadcrumbs links={links} {...other} />\r\n        </Box>\r\n\r\n        {action && <Box sx={{ flexShrink: 0 }}>{action}</Box>}\r\n      </Box>\r\n\r\n      <Box sx={{ mt: 2 }}>\r\n        {isString(moreLink) ? (\r\n          <Link href={moreLink} target=\"_blank\" variant=\"body2\">\r\n            {moreLink}\r\n          </Link>\r\n        ) : (\r\n          moreLink.map((href) => (\r\n            <Link noWrap key={href} href={href} variant=\"body2\" target=\"_blank\" sx={{ display: 'table' }}>\r\n              {href}\r\n            </Link>\r\n          ))\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","// ----------------------------------------------------------------------\r\n\r\nexport default function fakeRequest(time) {\r\n  return new Promise((res) => setTimeout(res, time));\r\n}\r\n","import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport fileFill from '@iconify/icons-eva/file-fill';\r\nimport closeFill from '@iconify/icons-eva/close-fill';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\n// material\r\nimport { alpha, styled } from '@material-ui/core/styles';\r\nimport {\r\n  Box,\r\n  List,\r\n  Stack,\r\n  Paper,\r\n  Button,\r\n  ListItem,\r\n  Typography,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  ListItemSecondaryAction\r\n} from '@material-ui/core';\r\n// utils\r\nimport { fData } from '../../utils/formatNumber';\r\n//\r\nimport { MIconButton } from '../@material-extend';\r\nimport { varFadeInRight } from '../animate';\r\nimport { UploadIllustration } from '../../assets';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DropZoneStyle = styled('div')(({ theme }) => ({\r\n  outline: 'none',\r\n  display: 'flex',\r\n  textAlign: 'center',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(5, 1),\r\n  borderRadius: theme.shape.borderRadius,\r\n  backgroundColor: theme.palette.background.neutral,\r\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\r\n  '&:hover': { opacity: 0.72, cursor: 'pointer' },\r\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUploadMultiFile.propTypes = {\r\n  error: PropTypes.bool,\r\n  showPreview: PropTypes.bool,\r\n  files: PropTypes.array,\r\n  onRemove: PropTypes.func,\r\n  onRemoveAll: PropTypes.func,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function UploadMultiFile({ error, showPreview = false, files, onRemove, onRemoveAll, sx, ...other }) {\r\n  const hasFile = files.length > 0;\r\n\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\r\n    ...other\r\n  });\r\n\r\n  const ShowRejectionItems = () => (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        py: 1,\r\n        px: 2,\r\n        mt: 3,\r\n        borderColor: 'error.light',\r\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\r\n      }}\r\n    >\r\n      {fileRejections.map(({ file, errors }) => {\r\n        const { path, size } = file;\r\n        return (\r\n          <Box key={path} sx={{ my: 1 }}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {path} - {fData(size)}\r\n            </Typography>\r\n            {errors.map((e) => (\r\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\r\n                - {e.message}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', ...sx }}>\r\n      <DropZoneStyle\r\n        {...getRootProps()}\r\n        sx={{\r\n          ...(isDragActive && { opacity: 0.72 }),\r\n          ...((isDragReject || error) && {\r\n            color: 'error.main',\r\n            borderColor: 'error.light',\r\n            bgcolor: 'error.lighter'\r\n          })\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n\r\n        <UploadIllustration sx={{ width: 220 }} />\r\n\r\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            Drop or Select file\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            Drop files here or click&nbsp;\r\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\r\n              browse\r\n            </Typography>\r\n            &nbsp;thorough your machine\r\n          </Typography>\r\n        </Box>\r\n      </DropZoneStyle>\r\n\r\n      {fileRejections.length > 0 && <ShowRejectionItems />}\r\n\r\n      <List disablePadding sx={{ ...(hasFile && { my: 3 }) }}>\r\n        <AnimatePresence>\r\n          {files.map((file) => {\r\n            const { name, size, preview } = file;\r\n            const key = isString(file) ? file : name;\r\n\r\n            if (showPreview) {\r\n              return (\r\n                <ListItem\r\n                  key={key}\r\n                  component={motion.div}\r\n                  {...varFadeInRight}\r\n                  sx={{\r\n                    p: 0,\r\n                    m: 0.5,\r\n                    width: 80,\r\n                    height: 80,\r\n                    borderRadius: 1.5,\r\n                    overflow: 'hidden',\r\n                    position: 'relative',\r\n                    display: 'inline-flex'\r\n                  }}\r\n                >\r\n                  <Paper\r\n                    variant=\"outlined\"\r\n                    component=\"img\"\r\n                    src={isString(file) ? file : preview}\r\n                    sx={{ width: '100%', height: '100%', objectFit: 'cover', position: 'absolute' }}\r\n                  />\r\n                  <Box sx={{ top: 6, right: 6, position: 'absolute' }}>\r\n                    <MIconButton\r\n                      size=\"small\"\r\n                      onClick={() => onRemove(file)}\r\n                      sx={{\r\n                        p: '2px',\r\n                        color: 'common.white',\r\n                        bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72),\r\n                        '&:hover': {\r\n                          bgcolor: (theme) => alpha(theme.palette.grey[900], 0.48)\r\n                        }\r\n                      }}\r\n                    >\r\n                      <Icon icon={closeFill} />\r\n                    </MIconButton>\r\n                  </Box>\r\n                </ListItem>\r\n              );\r\n            }\r\n\r\n            return (\r\n              <ListItem\r\n                key={key}\r\n                component={motion.div}\r\n                {...varFadeInRight}\r\n                sx={{\r\n                  my: 1,\r\n                  py: 0.75,\r\n                  px: 2,\r\n                  borderRadius: 1,\r\n                  border: (theme) => `solid 1px ${theme.palette.divider}`,\r\n                  bgcolor: 'background.paper'\r\n                }}\r\n              >\r\n                <ListItemIcon>\r\n                  <Icon icon={fileFill} width={28} height={28} />\r\n                </ListItemIcon>\r\n                <ListItemText\r\n                  primary={isString(file) ? file : name}\r\n                  secondary={isString(file) ? '' : fData(size)}\r\n                  primaryTypographyProps={{ variant: 'subtitle2' }}\r\n                  secondaryTypographyProps={{ variant: 'caption' }}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <MIconButton edge=\"end\" size=\"small\" onClick={() => onRemove(file)}>\r\n                    <Icon icon={closeFill} />\r\n                  </MIconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </AnimatePresence>\r\n      </List>\r\n\r\n      {hasFile && (\r\n        <Stack direction=\"row\" justifyContent=\"flex-end\">\r\n          <Button onClick={onRemoveAll} sx={{ mr: 1.5 }}>\r\n            Remove all\r\n          </Button>\r\n          <Button variant=\"contained\">Upload files</Button>\r\n        </Stack>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n","import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { useDropzone } from 'react-dropzone';\r\n// material\r\nimport { alpha, styled } from '@material-ui/core/styles';\r\nimport { Paper, Box, Typography } from '@material-ui/core';\r\n// utils\r\nimport { fData } from '../../utils/formatNumber';\r\n//\r\nimport { UploadIllustration } from '../../assets';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst DropZoneStyle = styled('div')(({ theme }) => ({\r\n  outline: 'none',\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  textAlign: 'center',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  padding: theme.spacing(5, 0),\r\n  borderRadius: theme.shape.borderRadius,\r\n  transition: theme.transitions.create('padding'),\r\n  backgroundColor: theme.palette.background.neutral,\r\n  border: `1px dashed ${theme.palette.grey[500_32]}`,\r\n  '&:hover': {\r\n    opacity: 0.72,\r\n    cursor: 'pointer'\r\n  },\r\n  [theme.breakpoints.up('md')]: { textAlign: 'left', flexDirection: 'row' }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUploadSingleFile.propTypes = {\r\n  error: PropTypes.bool,\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function UploadSingleFile({ error, file, sx, ...other }) {\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\r\n    multiple: false,\r\n    ...other\r\n  });\r\n\r\n  const ShowRejectionItems = () => (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        py: 1,\r\n        px: 2,\r\n        mt: 3,\r\n        borderColor: 'error.light',\r\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\r\n      }}\r\n    >\r\n      {fileRejections.map(({ file, errors }) => {\r\n        const { path, size } = file;\r\n        return (\r\n          <Box key={path} sx={{ my: 1 }}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {path} - {fData(size)}\r\n            </Typography>\r\n            {errors.map((e) => (\r\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\r\n                - {e.message}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', ...sx }}>\r\n      <DropZoneStyle\r\n        {...getRootProps()}\r\n        sx={{\r\n          ...(isDragActive && { opacity: 0.72 }),\r\n          ...((isDragReject || error) && {\r\n            color: 'error.main',\r\n            borderColor: 'error.light',\r\n            bgcolor: 'error.lighter'\r\n          }),\r\n          ...(file && { padding: '12% 0' })\r\n        }}\r\n      >\r\n        <input {...getInputProps()} />\r\n\r\n        <UploadIllustration sx={{ width: 220 }} />\r\n\r\n        <Box sx={{ p: 3, ml: { md: 2 } }}>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            Drop or Select file\r\n          </Typography>\r\n\r\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n            Drop files here or click&nbsp;\r\n            <Typography variant=\"body2\" component=\"span\" sx={{ color: 'primary.main', textDecoration: 'underline' }}>\r\n              browse\r\n            </Typography>\r\n            &nbsp;thorough your machine\r\n          </Typography>\r\n        </Box>\r\n\r\n        {file && (\r\n          <Box\r\n            component=\"img\"\r\n            alt=\"file preview\"\r\n            src={isString(file) ? file : file.preview}\r\n            sx={{\r\n              top: 8,\r\n              borderRadius: 1,\r\n              objectFit: 'cover',\r\n              position: 'absolute',\r\n              width: 'calc(100% - 16px)',\r\n              height: 'calc(100% - 16px)'\r\n            }}\r\n          />\r\n        )}\r\n      </DropZoneStyle>\r\n\r\n      {fileRejections.length > 0 && <ShowRejectionItems />}\r\n    </Box>\r\n  );\r\n}\r\n","import { isString } from 'lodash';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport roundAddAPhoto from '@iconify/icons-ic/round-add-a-photo';\r\n// material\r\nimport { alpha, styled } from '@material-ui/core/styles';\r\nimport { Box, Typography, Paper } from '@material-ui/core';\r\n// utils\r\nimport { fData } from '../../utils/formatNumber';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst RootStyle = styled('div')(({ theme }) => ({\r\n  width: 144,\r\n  height: 144,\r\n  margin: 'auto',\r\n  borderRadius: '50%',\r\n  padding: theme.spacing(1),\r\n  border: `1px dashed ${theme.palette.grey[500_32]}`\r\n}));\r\n\r\nconst DropZoneStyle = styled('div')({\r\n  zIndex: 0,\r\n  width: '100%',\r\n  height: '100%',\r\n  outline: 'none',\r\n  display: 'flex',\r\n  overflow: 'hidden',\r\n  borderRadius: '50%',\r\n  position: 'relative',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  '& > *': { width: '100%', height: '100%' },\r\n  '&:hover': {\r\n    cursor: 'pointer',\r\n    '& .placeholder': {\r\n      zIndex: 9\r\n    }\r\n  }\r\n});\r\n\r\nconst PlaceholderStyle = styled('div')(({ theme }) => ({\r\n  display: 'flex',\r\n  position: 'absolute',\r\n  alignItems: 'center',\r\n  flexDirection: 'column',\r\n  justifyContent: 'center',\r\n  color: theme.palette.text.secondary,\r\n  backgroundColor: theme.palette.background.neutral,\r\n  transition: theme.transitions.create('opacity', {\r\n    easing: theme.transitions.easing.easeInOut,\r\n    duration: theme.transitions.duration.shorter\r\n  }),\r\n  '&:hover': { opacity: 0.72 }\r\n}));\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nUploadAvatar.propTypes = {\r\n  error: PropTypes.bool,\r\n  file: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n  caption: PropTypes.node,\r\n  sx: PropTypes.object\r\n};\r\n\r\nexport default function UploadAvatar({ error, file, caption, sx, ...other }) {\r\n  const { getRootProps, getInputProps, isDragActive, isDragReject, fileRejections } = useDropzone({\r\n    multiple: false,\r\n    ...other\r\n  });\r\n\r\n  const ShowRejectionItems = () => (\r\n    <Paper\r\n      variant=\"outlined\"\r\n      sx={{\r\n        py: 1,\r\n        px: 2,\r\n        my: 2,\r\n        borderColor: 'error.light',\r\n        bgcolor: (theme) => alpha(theme.palette.error.main, 0.08)\r\n      }}\r\n    >\r\n      {fileRejections.map(({ file, errors }) => {\r\n        const { path, size } = file;\r\n        return (\r\n          <Box key={path} sx={{ my: 1 }}>\r\n            <Typography variant=\"subtitle2\" noWrap>\r\n              {path} - {fData(size)}\r\n            </Typography>\r\n            {errors.map((e) => (\r\n              <Typography key={e.code} variant=\"caption\" component=\"p\">\r\n                - {e.message}\r\n              </Typography>\r\n            ))}\r\n          </Box>\r\n        );\r\n      })}\r\n    </Paper>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <RootStyle sx={sx}>\r\n        <DropZoneStyle\r\n          {...getRootProps()}\r\n          sx={{\r\n            ...(isDragActive && { opacity: 0.72 }),\r\n            ...((isDragReject || error) && {\r\n              color: 'error.main',\r\n              borderColor: 'error.light',\r\n              bgcolor: 'error.lighter'\r\n            })\r\n          }}\r\n        >\r\n          <input {...getInputProps()} />\r\n\r\n          {file && (\r\n            <Box\r\n              component=\"img\"\r\n              alt=\"avatar\"\r\n              src={isString(file) ? file : file.preview}\r\n              sx={{ zIndex: 8, objectFit: 'cover' }}\r\n            />\r\n          )}\r\n\r\n          <PlaceholderStyle\r\n            className=\"placeholder\"\r\n            sx={{\r\n              ...(file && {\r\n                opacity: 0,\r\n                color: 'common.white',\r\n                bgcolor: 'grey.900',\r\n                '&:hover': { opacity: 0.72 }\r\n              })\r\n            }}\r\n          >\r\n            <Box component={Icon} icon={roundAddAPhoto} sx={{ width: 24, height: 24, mb: 1 }} />\r\n            <Typography variant=\"caption\">{file ? 'Update photo' : 'Upload photo'}</Typography>\r\n          </PlaceholderStyle>\r\n        </DropZoneStyle>\r\n      </RootStyle>\r\n\r\n      {caption}\r\n\r\n      {fileRejections.length > 0 && <ShowRejectionItems />}\r\n    </>\r\n  );\r\n}\r\n","import * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { useCallback } from 'react';\r\nimport { useSnackbar } from 'notistack5';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport { LoadingButton } from '@material-ui/lab';\r\nimport {\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  FormHelperText,\r\n  FormControlLabel\r\n} from '@material-ui/core';\r\nimport AdjustSharpIcon from '@mui/icons-material/AdjustSharp';\r\nimport AutoAwesomeSharpIcon from '@mui/icons-material/AutoAwesomeSharp';\r\n// utils\r\nimport axios from '../../../utils/axios';\r\nimport { fData } from '../../../utils/formatNumber';\r\nimport fakeRequest from '../../../utils/fakeRequest';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../../routes/paths';\r\n//\r\nimport Label from '../../Label';\r\nimport { UploadAvatar } from '../../upload';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nParameterSettingsForm.propTypes = {\r\n  settingsData: PropTypes.object\r\n};\r\n\r\nexport default function ParameterSettingsForm({ settingsData }) {\r\n  const navigate = useNavigate();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const itemValidation = Yup.object().shape({\r\n    refresh_location_time_interval: Yup.string().required('This field is required'),\r\n    top_information_online_hour: Yup.string().required('This field is required'),\r\n    downloads_message_num: Yup.string().required('This field is required'),\r\n    message_limit_character_num: Yup.string().required('This field is required'),\r\n    domain_name: Yup.string().required('This field is required'),\r\n    app_use_hour: Yup.string().required('This field is required'),\r\n    top_message_num: Yup.string().required('This field is required'),\r\n    top_message_save_hour: Yup.string().required('This field is required'),\r\n    default_coverage: Yup.string().required('This field is required'),\r\n    banned_hour: Yup.string().required('This field is required')\r\n  });\r\n\r\n  const formik = useFormik({\r\n    enableReinitialize: true,\r\n    initialValues: {\r\n      refresh_location_time_interval: settingsData?.settings.refresh_location_time_interval || 5,\r\n      top_information_online_hour: settingsData?.settings.top_information_online_hour || 24,\r\n      downloads_message_num: settingsData?.settings.downloads_message_num || 100,\r\n      message_limit_character_num: settingsData?.settings.message_limit_character_num || 1000,\r\n      domain_name: settingsData?.settings.domain_name || 'toptalk.app',\r\n      admin_mail_address: settingsData?.settings.admin_mail_address || '',\r\n      online_chat_admin_email: settingsData?.settings.online_chat_admin_email || '',\r\n      app_use_hour: settingsData?.settings.app_use_hour || 1,\r\n      top_message_num: settingsData?.settings.top_message_num || 1,\r\n      top_message_save_hour: settingsData?.settings.top_message_save_hour || 24,\r\n      message_save_hour: settingsData?.settings.message_save_hour || 1,\r\n      default_coverage: settingsData?.settings.default_coverage || 150,\r\n      banned_hour: settingsData?.settings.banned_hour || 72\r\n    },\r\n    validationSchema: itemValidation,\r\n    onSubmit: async (values, { setSubmitting, resetForm, setErrors }) => {\r\n      try {\r\n        await fakeRequest(500);\r\n\r\n        await axios.put('/settings/parameter/', values);\r\n\r\n        // resetForm();\r\n        setSubmitting(false);\r\n        enqueueSnackbar('Update success', { variant: 'success' });\r\n      } catch (error) {\r\n        console.error(error);\r\n        setSubmitting(false);\r\n        setErrors(error);\r\n      }\r\n    }\r\n  });\r\n\r\n  const { errors, values, touched, handleSubmit, isSubmitting, setFieldValue, getFieldProps } = formik;\r\n\r\n  return (\r\n    <FormikProvider value={formik}>\r\n      <Form noValidate autoComplete=\"off\" onSubmit={handleSubmit}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={12}>\r\n            <Card sx={{ p: 3 }}>\r\n              <Stack spacing={3}>\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    How often to refresh the user's location: every\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('refresh_location_time_interval')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.refresh_location_time_interval && errors.refresh_location_time_interval)}\r\n                    helperText={touched.refresh_location_time_interval && errors.refresh_location_time_interval}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    minutes\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    TOP information is online for\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('top_information_online_hour')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.top_information_online_hour && errors.top_information_online_hour)}\r\n                    helperText={touched.top_information_online_hour && errors.top_information_online_hour}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    hours\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    After the user logs into the APP, system downloads last\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('downloads_message_num')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.downloads_message_num && errors.downloads_message_num)}\r\n                    helperText={touched.downloads_message_num && errors.downloads_message_num}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    messages of the public chat room\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Each message text is limited to\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('message_limit_character_num')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 80 }}\r\n                    error={Boolean(touched.message_limit_character_num && errors.message_limit_character_num)}\r\n                    helperText={touched.message_limit_character_num && errors.message_limit_character_num}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    characters\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Domain name:\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('domain_name')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 120 }}\r\n                    error={Boolean(touched.domain_name && errors.domain_name)}\r\n                    helperText={touched.domain_name && errors.domain_name}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Admin mail address:\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('admin_mail_address')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 150 }}\r\n                    error={Boolean(touched.admin_mail_address && errors.admin_mail_address)}\r\n                    helperText={touched.admin_mail_address && errors.admin_mail_address}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Online chat admin email:\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('online_chat_admin_email')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 150 }}\r\n                    error={Boolean(touched.online_chat_admin_email && errors.online_chat_admin_email)}\r\n                    helperText={touched.online_chat_admin_email && errors.online_chat_admin_email}\r\n                  />\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Visitors are allowed to use APP for\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('app_use_hour')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.app_use_hour && errors.app_use_hour)}\r\n                    helperText={touched.app_use_hour && errors.app_use_hour}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    hours each time\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    Each user can only TOP\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('top_message_num')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.top_message_num && errors.top_message_num)}\r\n                    helperText={touched.top_message_num && errors.top_message_num}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    messages\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    The server saves TOP messages in the past\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('top_message_save_hour')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.top_message_save_hour && errors.top_message_save_hour)}\r\n                    helperText={touched.top_message_save_hour && errors.top_message_save_hour}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    hours, and the messages within\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('message_save_hour')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.message_save_hour && errors.message_save_hour)}\r\n                    helperText={touched.message_save_hour && errors.message_save_hour}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    hours of public chat\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    The default max. coverage set is\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('default_coverage')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.default_coverage && errors.default_coverage)}\r\n                    helperText={touched.default_coverage && errors.default_coverage}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    people nearby\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Stack direction={{ xs: 'column', sm: 'row' }} spacing={{ xs: 3, sm: 2 }}>\r\n                  <AutoAwesomeSharpIcon />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    If a user is blocked by 3 users within 24 hours, he will be banned speaking for\r\n                  </Typography>\r\n                  <TextField\r\n                    {...getFieldProps('banned_hour')}\r\n                    variant=\"standard\"\r\n                    style={{ width: 60 }}\r\n                    error={Boolean(touched.banned_hour && errors.banned_hour)}\r\n                    helperText={touched.banned_hour && errors.banned_hour}\r\n                  />\r\n                  <Typography variant=\"body1\" component=\"div\" style={{ lineHeight: 2 }}>\r\n                    hours\r\n                  </Typography>\r\n                </Stack>\r\n\r\n                <Box sx={{ mt: 3, display: 'flex', justifyContent: 'flex-end' }}>\r\n                  <LoadingButton type=\"submit\" variant=\"contained\" loading={isSubmitting}>\r\n                    Save Changes\r\n                  </LoadingButton>\r\n                </Box>\r\n              </Stack>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Form>\r\n    </FormikProvider>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\n// import { paramCase } from 'change-case';\r\n// import { useParams, useLocation } from 'react-router-dom';\r\n// material\r\nimport { Container } from '@material-ui/core';\r\n// redux\r\nimport { useDispatch, useSelector } from '../../redux/store';\r\nimport { getSettingsList } from '../../redux/slices/settings';\r\n// import { getWordList } from '../../redux/slices/prohibitedword';\r\n// routes\r\nimport { PATH_DASHBOARD } from '../../routes/paths';\r\n// hooks\r\nimport useSettings from '../../hooks/useSettings';\r\n// components\r\nimport Page from '../../components/Page';\r\nimport HeaderBreadcrumbs from '../../components/HeaderBreadcrumbs';\r\nimport ParameterSettingsForm from '../../components/_dashboard/settings/ParameterSettingsForm';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function ParameterSettings() {\r\n  const { themeStretch } = useSettings();\r\n  const dispatch = useDispatch();\r\n  // const { pathname } = useLocation();\r\n  // const { word } = useParams();\r\n  const { settingsList } = useSelector((state) => state.setting);\r\n  const parameterSettings = settingsList.find((settingRow) => settingRow.type === 'parameter');\r\n\r\n  useEffect(() => {\r\n    dispatch(getSettingsList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Page title=\"Settings: Parameter Settings | Locals\">\r\n      <Container maxWidth={themeStretch ? false : 'lg'}>\r\n        <HeaderBreadcrumbs\r\n          heading=\"Parameter Settings\"\r\n          links={[\r\n            { name: 'Dashboard', href: PATH_DASHBOARD.root },\r\n            { name: 'Settings', href: PATH_DASHBOARD.settings.parameters },\r\n            { name: 'Parameters' }\r\n          ]}\r\n        />\r\n\r\n        <ParameterSettingsForm settingsData={parameterSettings} />\r\n      </Container>\r\n    </Page>\r\n  );\r\n}\r\n"],"sourceRoot":""}